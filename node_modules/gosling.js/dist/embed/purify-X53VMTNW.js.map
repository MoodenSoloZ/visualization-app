{
  "version": 3,
  "sources": ["../../node_modules/dompurify/src/utils.js", "../../node_modules/dompurify/src/tags.js", "../../node_modules/dompurify/src/attrs.js", "../../node_modules/dompurify/src/regexp.js", "../../node_modules/dompurify/src/purify.js"],
  "sourcesContent": ["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'feimage',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n", "import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\n", "import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    Text,\n    Comment,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML =\n    trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML('')\n      : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify.\n   *\n   * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n   * might cause XSS from attacks hidden in closed shadowroots in case the browser\n   * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n   */\n  let RETURN_DOM_IMPORT = true;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  let SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR)\n        : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR)\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS)\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? (x) => x\n        : stringToLowerCase;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erronously deleted from\n      // HTML namespace.\n      const commonSvgAndHTMLElements = addToSet({}, [\n        'title',\n        'style',\n        'font',\n        'a',\n        'script',\n      ]);\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (\n      typeof elm.nodeName !== 'string' ||\n      typeof elm.textContent !== 'string' ||\n      typeof elm.removeChild !== 'function' ||\n      !(elm.attributes instanceof NamedNodeMap) ||\n      typeof elm.removeAttribute !== 'function' ||\n      typeof elm.setAttribute !== 'function' ||\n      typeof elm.namespaceURI !== 'string' ||\n      typeof elm.insertBefore !== 'function'\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* No special handling necessary for in-place sanitization */\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;UACE,iBAKE,OALF,gBACA,iBAIE,OAJF,gBACA,WAGE,OAHF,UACA,iBAEE,OAFF,gBACA,2BACE,OADF;UAGI,SAAyB,OAAzB,QAAQ,OAAiB,OAAjB,MAAM,SAAW,OAAX;iBACO,OAAO,YAAY,eAAe,SAAvD,QAAA,KAAA,OAAO,YAAA,KAAA;AAEb,UAAI,CAAC,OAAO;AACV,gBAAQ,gBAAU,KAAK,WAAW,MAAM;AACtC,iBAAO,IAAI,MAAM,WAAW;;;AAIhC,UAAI,CAAC,QAAQ;AACX,iBAAS,iBAAU,GAAG;AACpB,iBAAO;;;AAIX,UAAI,CAAC,MAAM;AACT,eAAO,eAAU,GAAG;AAClB,iBAAO;;;AAIX,UAAI,CAAC,WAAW;AACd,oBAAY,oBAAU,MAAM,MAAM;AAChC,iBAAA,IAAA,UAAA,UAAA,KAAA,MAAW,MAAX,CAAA,MAAA,OAAA,mBAAmB;;;AAIvB,UAAM,eAAe,QAAQ,MAAM,UAAU;AAE7C,UAAM,WAAW,QAAQ,MAAM,UAAU;AACzC,UAAM,YAAY,QAAQ,MAAM,UAAU;AAG1C,UAAM,oBAAoB,QAAQ,OAAO,UAAU;AACnD,UAAM,cAAc,QAAQ,OAAO,UAAU;AAC7C,UAAM,gBAAgB,QAAQ,OAAO,UAAU;AAC/C,UAAM,gBAAgB,QAAQ,OAAO,UAAU;AAC/C,UAAM,aAAa,QAAQ,OAAO,UAAU;AAE5C,UAAM,aAAa,QAAQ,OAAO,UAAU;AAE5C,UAAM,kBAAkB,YAAY;AAE7B,uBAAiB,MAAM;AAC5B,eAAO,SAAC,SAAD;AAAA,mBAAA,OAAA,UAAA,QAAa,OAAb,MAAA,OAAA,IAAA,OAAA,IAAA,IAAA,OAAA,GAAA,OAAA,MAAA,QAAA;AAAa,iBAAb,OAAA,KAAA,UAAA;;AAAA,iBAAsB,MAAM,MAAM,SAAS;;;AAG7C,2BAAqB,MAAM;AAChC,eAAO,WAAA;AAAA,mBAAA,QAAA,UAAA,QAAI,OAAJ,MAAA,QAAA,QAAA,GAAA,QAAA,OAAA,SAAA;AAAI,iBAAJ,SAAA,UAAA;;AAAA,iBAAa,UAAU,MAAM;;;AAI/B,wBAAkB,KAAK,OAAO;AACnC,YAAI,gBAAgB;AAIlB,yBAAe,KAAK;;AAGtB,YAAI,IAAI,MAAM;AACd,eAAO,KAAK;AACV,cAAI,UAAU,MAAM;AACpB,cAAI,OAAO,YAAY,UAAU;AAC/B,gBAAM,YAAY,kBAAkB;AACpC,gBAAI,cAAc,SAAS;AAEzB,kBAAI,CAAC,SAAS,QAAQ;AACpB,sBAAM,KAAK;;AAGb,wBAAU;;;AAId,cAAI,WAAW;;AAGjB,eAAO;;AAIF,qBAAe,QAAQ;AAC5B,YAAM,YAAY,OAAO;AAEzB,YAAI,WAAA;AACJ,aAAK,YAAY,QAAQ;AACvB,cAAI,MAAM,gBAAgB,QAAQ,CAAC,YAAY;AAC7C,sBAAU,YAAY,OAAO;;;AAIjC,eAAO;;AAOT,4BAAsB,QAAQ,MAAM;AAClC,eAAO,WAAW,MAAM;AACtB,cAAM,OAAO,yBAAyB,QAAQ;AAC9C,cAAI,MAAM;AACR,gBAAI,KAAK,KAAK;AACZ,qBAAO,QAAQ,KAAK;;AAGtB,gBAAI,OAAO,KAAK,UAAU,YAAY;AACpC,qBAAO,QAAQ,KAAK;;;AAIxB,mBAAS,eAAe;;AAG1B,+BAAuB,SAAS;AAC9B,kBAAQ,KAAK,sBAAsB;AACnC,iBAAO;;AAGT,eAAO;;AC9HF,UAAM,OAAO,OAAO,CACzB,KACA,QACA,WACA,WACA,QACA,WACA,SACA,SACA,KACA,OACA,OACA,OACA,SACA,cACA,QACA,MACA,UACA,UACA,WACA,UACA,QACA,QACA,OACA,YACA,WACA,QACA,YACA,MACA,aACA,OACA,WACA,OACA,UACA,OACA,OACA,MACA,MACA,WACA,MACA,YACA,cACA,UACA,QACA,UACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,UACA,UACA,MACA,QACA,KACA,OACA,SACA,OACA,OACA,SACA,UACA,MACA,QACA,OACA,QACA,WACA,QACA,YACA,SACA,OACA,QACA,MACA,YACA,UACA,UACA,KACA,WACA,OACA,YACA,KACA,MACA,MACA,QACA,KACA,QACA,WACA,UACA,UACA,SACA,UACA,UACA,QACA,UACA,UACA,SACA,OACA,WACA,OACA,SACA,SACA,MACA,YACA,YACA,SACA,MACA,SACA,QACA,MACA,SACA,MACA,KACA,MACA,OACA,SACA;AAIK,UAAM,MAAM,OAAO,CACxB,OACA,KACA,YACA,eACA,gBACA,gBACA,iBACA,oBACA,UACA,YACA,QACA,QACA,WACA,UACA,QACA,KACA,SACA,YACA,SACA,SACA,QACA,kBACA,UACA,QACA,YACA,SACA,QACA,WACA,WACA,YACA,kBACA,QACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,QACA,SACA,QACA;AAGK,UAAM,aAAa,OAAO,CAC/B,WACA,iBACA,uBACA,eACA,oBACA,qBACA,qBACA,kBACA,WACA,WACA,WACA,WACA,WACA,kBACA,WACA,eACA,gBACA,YACA,gBACA,sBACA,eACA,UACA;AAOK,UAAM,gBAAgB,OAAO,CAClC,WACA,iBACA,UACA,WACA,gBACA,WACA,aACA,oBACA,kBACA,iBACA,iBACA,iBACA,SACA,aACA,QACA,gBACA,aACA,WACA,iBACA,UACA,OACA,cACA,WACA;AAGK,UAAM,SAAS,OAAO,CAC3B,QACA,YACA,UACA,WACA,SACA,UACA,MACA,cACA,iBACA,MACA,MACA,SACA,WACA,YACA,SACA,QACA,MACA,UACA,SACA,UACA,QACA,QACA,WACA,UACA,OACA,SACA,OACA,UACA;AAKK,UAAM,mBAAmB,OAAO,CACrC,WACA,eACA,cACA,YACA,aACA,WACA,WACA,UACA,UACA,SACA,aACA,cACA,kBACA,eACA;AAGK,UAAM,OAAO,OAAO,CAAC;ACpRrB,UAAM,SAAO,OAAO,CACzB,UACA,UACA,SACA,OACA,kBACA,gBACA,wBACA,YACA,cACA,WACA,UACA,WACA,eACA,eACA,WACA,QACA,SACA,SACA,SACA,QACA,WACA,YACA,gBACA,UACA,eACA,YACA,YACA,WACA,OACA,YACA,2BACA,yBACA,YACA,aACA,WACA,gBACA,QACA,OACA,WACA,UACA,UACA,QACA,QACA,YACA,MACA,aACA,aACA,SACA,QACA,SACA,QACA,QACA,WACA,QACA,OACA,OACA,aACA,SACA,UACA,OACA,aACA,YACA,SACA,QACA,WACA,cACA,UACA,QACA,WACA,WACA,eACA,eACA,UACA,WACA,WACA,cACA,YACA,OACA,YACA,OACA,YACA,QACA,QACA,WACA,cACA,SACA,YACA,SACA,QACA,SACA,QACA,WACA,SACA,OACA,UACA,QACA,SACA,WACA,YACA,SACA,aACA,QACA,UACA,UACA,SACA,SACA,SACA;AAGK,UAAM,QAAM,OAAO,CACxB,iBACA,cACA,YACA,sBACA,UACA,iBACA,iBACA,WACA,iBACA,kBACA,SACA,QACA,MACA,SACA,QACA,iBACA,aACA,aACA,SACA,uBACA,+BACA,iBACA,mBACA,MACA,MACA,KACA,MACA,MACA,mBACA,aACA,WACA,WACA,OACA,YACA,aACA,OACA,QACA,gBACA,aACA,UACA,eACA,eACA,iBACA,eACA,aACA,oBACA,gBACA,cACA,gBACA,eACA,MACA,MACA,MACA,MACA,cACA,YACA,iBACA,qBACA,UACA,QACA,MACA,mBACA,MACA,OACA,KACA,MACA,MACA,MACA,MACA,WACA,aACA,cACA,YACA,QACA,gBACA,kBACA,gBACA,oBACA,kBACA,SACA,cACA,cACA,gBACA,gBACA,eACA,eACA,oBACA,aACA,OACA,QACA,SACA,UACA,QACA,OACA,QACA,cACA,UACA,YACA,WACA,SACA,UACA,eACA,UACA,YACA,eACA,QACA,cACA,uBACA,oBACA,gBACA,UACA,iBACA,uBACA,kBACA,KACA,MACA,MACA,UACA,QACA,QACA,eACA,aACA,WACA,UACA,UACA,SACA,QACA,mBACA,oBACA,oBACA,gBACA,eACA,gBACA,eACA,cACA,gBACA,oBACA,qBACA,kBACA,mBACA,qBACA,kBACA,UACA,gBACA,SACA,gBACA,kBACA,YACA,WACA,WACA,aACA,eACA,mBACA,kBACA,cACA,QACA,MACA,MACA,WACA,UACA,WACA,cACA,WACA,cACA,iBACA,iBACA,SACA,gBACA,QACA,gBACA,oBACA,oBACA,KACA,MACA,MACA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",
  "names": []
}
