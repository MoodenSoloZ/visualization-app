{"ast":null,"code":"import _objectWithoutProperties from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _classCallCheck from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"spec\", \"onNewView\", \"signalListeners\", \"width\", \"height\"];\nimport _pt from \"prop-types\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport React from 'react';\nimport vegaEmbed from 'vega-embed';\nimport shallowEqual from './utils/shallowEqual';\nimport getUniqueFieldNames from './utils/getUniqueFieldNames';\nimport { NOOP } from './constants';\nimport addSignalListenersToView from './utils/addSignalListenersToView';\nimport computeSpecChanges from './utils/computeSpecChanges';\nimport removeSignalListenersFromView from './utils/removeSignalListenersFromView';\nimport combineSpecWithDimension from './utils/combineSpecWithDimension';\nvar VegaEmbed = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(VegaEmbed, _React$PureComponent);\n  var _super = _createSuper(VegaEmbed);\n  function VegaEmbed() {\n    var _this;\n    _classCallCheck(this, VegaEmbed);\n    _this = _super.apply(this, arguments);\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", /*#__PURE__*/React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"resultPromise\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"handleError\", function (error) {\n      var _this$props$onError = _this.props.onError,\n        onError = _this$props$onError === void 0 ? NOOP : _this$props$onError;\n      onError(error, _this.containerRef.current); // eslint-disable-next-line no-console\n\n      console.warn(error);\n      return undefined;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"modifyView\", function (action) {\n      if (_this.resultPromise) {\n        _this.resultPromise.then(function (result) {\n          if (result) {\n            action(result.view);\n          }\n          return true;\n        }).catch(_this.handleError);\n      }\n    });\n    return _this;\n  }\n  _createClass(VegaEmbed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createView();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n      var fieldSet = getUniqueFieldNames([this.props, prevProps]);\n      fieldSet.delete('className');\n      fieldSet.delete('signalListeners');\n      fieldSet.delete('spec');\n      fieldSet.delete('style');\n      fieldSet.delete('width');\n      fieldSet.delete('height'); // Only create a new view if necessary\n\n      if (Array.from(fieldSet).some(function (f) {\n        return _this2.props[f] !== prevProps[f];\n      })) {\n        this.clearView();\n        this.createView();\n      } else {\n        var specChanges = computeSpecChanges(combineSpecWithDimension(this.props), combineSpecWithDimension(prevProps));\n        var newSignalListeners = this.props.signalListeners;\n        var oldSignalListeners = prevProps.signalListeners;\n        if (specChanges) {\n          if (specChanges.isExpensive) {\n            this.clearView();\n            this.createView();\n          } else {\n            var areSignalListenersChanged = !shallowEqual(newSignalListeners, oldSignalListeners);\n            this.modifyView(function (view) {\n              if (specChanges.width !== false) {\n                view.width(specChanges.width);\n              }\n              if (specChanges.height !== false) {\n                view.height(specChanges.height);\n              }\n              if (areSignalListenersChanged) {\n                if (oldSignalListeners) {\n                  removeSignalListenersFromView(view, oldSignalListeners);\n                }\n                if (newSignalListeners) {\n                  addSignalListenersToView(view, newSignalListeners);\n                }\n              }\n              view.run();\n            });\n          }\n        } else if (!shallowEqual(newSignalListeners, oldSignalListeners)) {\n          this.modifyView(function (view) {\n            if (oldSignalListeners) {\n              removeSignalListenersFromView(view, oldSignalListeners);\n            }\n            if (newSignalListeners) {\n              addSignalListenersToView(view, newSignalListeners);\n            }\n            view.run();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearView();\n    }\n  }, {\n    key: \"createView\",\n    value: function createView() {\n      var _this$props = this.props,\n        spec = _this$props.spec,\n        onNewView = _this$props.onNewView,\n        _this$props$signalLis = _this$props.signalListeners,\n        signalListeners = _this$props$signalLis === void 0 ? {} : _this$props$signalLis,\n        width = _this$props.width,\n        height = _this$props.height,\n        options = _objectWithoutProperties(_this$props, _excluded);\n      if (this.containerRef.current) {\n        var finalSpec = combineSpecWithDimension(this.props);\n        this.resultPromise = vegaEmbed(this.containerRef.current, finalSpec, options).then(function (result) {\n          if (result) {\n            var view = result.view;\n            if (addSignalListenersToView(view, signalListeners)) {\n              view.run();\n            }\n          }\n          return result;\n        }).catch(this.handleError);\n        if (onNewView) {\n          this.modifyView(onNewView);\n        }\n      }\n    }\n  }, {\n    key: \"clearView\",\n    value: function clearView() {\n      if (this.resultPromise) {\n        this.resultPromise.then(function (result) {\n          if (result) {\n            result.finalize();\n          }\n        }).catch(this.handleError);\n      }\n      this.resultPromise = undefined;\n      return this;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        className = _this$props2.className,\n        style = _this$props2.style; // Create the container Vega draws inside\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.containerRef,\n        className: className,\n        style: style\n      });\n    }\n  }]);\n  return VegaEmbed;\n}(React.PureComponent);\nexport { VegaEmbed as default };\n_defineProperty(VegaEmbed, \"propTypes\", {\n  className: _pt.string,\n  onError: _pt.func\n});","map":{"version":3,"names":["_pt","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","vegaEmbed","shallowEqual","getUniqueFieldNames","NOOP","addSignalListenersToView","computeSpecChanges","removeSignalListenersFromView","combineSpecWithDimension","VegaEmbed","arguments","createRef","error","props","onError","containerRef","current","console","warn","undefined","action","resultPromise","then","result","view","catch","handleError","createView","prevProps","fieldSet","delete","Array","from","some","f","clearView","specChanges","newSignalListeners","signalListeners","oldSignalListeners","isExpensive","areSignalListenersChanged","modifyView","width","height","run","spec","onNewView","options","finalSpec","finalize","className","style","createElement","ref","PureComponent","string","func"],"sources":["/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/react-vega/esm/VegaEmbed.js"],"sourcesContent":["import _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport vegaEmbed from 'vega-embed';\nimport shallowEqual from './utils/shallowEqual';\nimport getUniqueFieldNames from './utils/getUniqueFieldNames';\nimport { NOOP } from './constants';\nimport addSignalListenersToView from './utils/addSignalListenersToView';\nimport computeSpecChanges from './utils/computeSpecChanges';\nimport removeSignalListenersFromView from './utils/removeSignalListenersFromView';\nimport combineSpecWithDimension from './utils/combineSpecWithDimension';\nexport default class VegaEmbed extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"containerRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"resultPromise\", void 0);\n\n    _defineProperty(this, \"handleError\", error => {\n      const {\n        onError = NOOP\n      } = this.props;\n      onError(error, this.containerRef.current); // eslint-disable-next-line no-console\n\n      console.warn(error);\n      return undefined;\n    });\n\n    _defineProperty(this, \"modifyView\", action => {\n      if (this.resultPromise) {\n        this.resultPromise.then(result => {\n          if (result) {\n            action(result.view);\n          }\n\n          return true;\n        }).catch(this.handleError);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.createView();\n  }\n\n  componentDidUpdate(prevProps) {\n    const fieldSet = getUniqueFieldNames([this.props, prevProps]);\n    fieldSet.delete('className');\n    fieldSet.delete('signalListeners');\n    fieldSet.delete('spec');\n    fieldSet.delete('style');\n    fieldSet.delete('width');\n    fieldSet.delete('height'); // Only create a new view if necessary\n\n    if (Array.from(fieldSet).some(f => this.props[f] !== prevProps[f])) {\n      this.clearView();\n      this.createView();\n    } else {\n      const specChanges = computeSpecChanges(combineSpecWithDimension(this.props), combineSpecWithDimension(prevProps));\n      const {\n        signalListeners: newSignalListeners\n      } = this.props;\n      const {\n        signalListeners: oldSignalListeners\n      } = prevProps;\n\n      if (specChanges) {\n        if (specChanges.isExpensive) {\n          this.clearView();\n          this.createView();\n        } else {\n          const areSignalListenersChanged = !shallowEqual(newSignalListeners, oldSignalListeners);\n          this.modifyView(view => {\n            if (specChanges.width !== false) {\n              view.width(specChanges.width);\n            }\n\n            if (specChanges.height !== false) {\n              view.height(specChanges.height);\n            }\n\n            if (areSignalListenersChanged) {\n              if (oldSignalListeners) {\n                removeSignalListenersFromView(view, oldSignalListeners);\n              }\n\n              if (newSignalListeners) {\n                addSignalListenersToView(view, newSignalListeners);\n              }\n            }\n\n            view.run();\n          });\n        }\n      } else if (!shallowEqual(newSignalListeners, oldSignalListeners)) {\n        this.modifyView(view => {\n          if (oldSignalListeners) {\n            removeSignalListenersFromView(view, oldSignalListeners);\n          }\n\n          if (newSignalListeners) {\n            addSignalListenersToView(view, newSignalListeners);\n          }\n\n          view.run();\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearView();\n  }\n\n  createView() {\n    const {\n      spec,\n      onNewView,\n      signalListeners = {},\n      width,\n      height,\n      ...options\n    } = this.props;\n\n    if (this.containerRef.current) {\n      const finalSpec = combineSpecWithDimension(this.props);\n      this.resultPromise = vegaEmbed(this.containerRef.current, finalSpec, options).then(result => {\n        if (result) {\n          const {\n            view\n          } = result;\n\n          if (addSignalListenersToView(view, signalListeners)) {\n            view.run();\n          }\n        }\n\n        return result;\n      }).catch(this.handleError);\n\n      if (onNewView) {\n        this.modifyView(onNewView);\n      }\n    }\n  }\n\n  clearView() {\n    if (this.resultPromise) {\n      this.resultPromise.then(result => {\n        if (result) {\n          result.finalize();\n        }\n      }).catch(this.handleError);\n    }\n\n    this.resultPromise = undefined;\n    return this;\n  }\n\n  render() {\n    const {\n      className,\n      style\n    } = this.props; // Create the container Vega draws inside\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.containerRef,\n      className: className,\n      style: style\n    });\n  }\n\n}\n\n_defineProperty(VegaEmbed, \"propTypes\", {\n  className: _pt.string,\n  onError: _pt.func\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}