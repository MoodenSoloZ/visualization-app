{"ast":null,"code":"import _classCallCheck from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { duplicate, hash as _hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for the sample transform nodes\n */\nexport var SampleTransformNode = /*#__PURE__*/function (_DataFlowNode) {\n  _inherits(SampleTransformNode, _DataFlowNode);\n  var _super = _createSuper(SampleTransformNode);\n  function SampleTransformNode(parent, transform) {\n    var _this;\n    _classCallCheck(this, SampleTransformNode);\n    _this = _super.call(this, parent);\n    _this.transform = transform;\n    return _this;\n  }\n  _createClass(SampleTransformNode, [{\n    key: \"clone\",\n    value: function clone() {\n      return new SampleTransformNode(null, duplicate(this.transform));\n    }\n  }, {\n    key: \"dependentFields\",\n    value: function dependentFields() {\n      return new Set();\n    }\n  }, {\n    key: \"producedFields\",\n    value: function producedFields() {\n      return new Set();\n    }\n  }, {\n    key: \"hash\",\n    value: function hash() {\n      return \"SampleTransform \".concat(_hash(this.transform));\n    }\n  }, {\n    key: \"assemble\",\n    value: function assemble() {\n      return {\n        type: 'sample',\n        size: this.transform.sample\n      };\n    }\n  }]);\n  return SampleTransformNode;\n}(DataFlowNode);","map":{"version":3,"sources":["../../../../src/compile/data/sample.ts"],"names":[],"mappings":";;;;AAEA,SAAQ,SAAS,EAAE,IAAI,IAAJ,KAAI,QAAO,YAAY;AAC1C,SAAQ,YAAY,QAAO,YAAY;AAEvC;;AAEG;AACH,WAAa,mBAAoB;EAAA;EAAA;EAK/B,6BAAY,MAAoB,EAAU,SAA0B,EAAA;IAAA;IAAA;IAClE,0BAAM,MAAM;IAD4B,MAAA,SAAS,GAAT,SAAS;IAAiB;EAEpE;EAAC;IAAA;IAAA,OANM,iBAAK;MACV,OAAO,IAAI,mBAAmB,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjE;EAAC;IAAA;IAAA,OAMM,2BAAe;MACpB,OAAO,IAAI,GAAG,EAAU;IAC1B;EAAC;IAAA;IAAA,OAEM,0BAAc;MACnB,OAAO,IAAI,GAAG,EAAU;IAC1B;EAAC;IAAA;IAAA,OAEM,gBAAI;MACT,iCAA0B,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAChD;EAAC;IAAA;IAAA,OAEM,oBAAQ;MACb,OAAO;QACL,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;OACtB;IACH;EAAC;EAAA;AAAA,EA1BsC,YAAY","sourceRoot":"","sourcesContent":["import { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for the sample transform nodes\n */\nexport class SampleTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        super(parent);\n        this.transform = transform;\n    }\n    clone() {\n        return new SampleTransformNode(null, duplicate(this.transform));\n    }\n    dependentFields() {\n        return new Set();\n    }\n    producedFields() {\n        return new Set();\n    }\n    hash() {\n        return `SampleTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        return {\n            type: 'sample',\n            size: this.transform.sample\n        };\n    }\n}\n//# sourceMappingURL=sample.js.map"]},"metadata":{},"sourceType":"module"}