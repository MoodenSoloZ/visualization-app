{"ast":null,"code":"import _classCallCheck from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { Split } from '../split';\nfunction isFalseOrNull(v) {\n  return v === false || v === null;\n}\nvar AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({\n  disable: 1,\n  gridScale: 1,\n  scale: 1\n}, COMMON_AXIS_PROPERTIES_INDEX), {\n  labelExpr: 1,\n  encode: 1\n});\nexport var AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport var AxisComponent = /*#__PURE__*/function (_Split) {\n  _inherits(AxisComponent, _Split);\n  var _super = _createSuper(AxisComponent);\n  function AxisComponent() {\n    var _this;\n    var explicit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var implicit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var mainExtracted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    _classCallCheck(this, AxisComponent);\n    _this = _super.call(this);\n    _this.explicit = explicit;\n    _this.implicit = implicit;\n    _this.mainExtracted = mainExtracted;\n    return _this;\n  }\n  _createClass(AxisComponent, [{\n    key: \"clone\",\n    value: function clone() {\n      return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n    }\n  }, {\n    key: \"hasAxisPart\",\n    value: function hasAxisPart(part) {\n      // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n      if (part === 'axis') {\n        // always has the axis container part\n        return true;\n      }\n      if (part === 'grid' || part === 'title') {\n        return !!this.get(part);\n      }\n      // Other parts are enabled by default, so they should not be false or null.\n      return !isFalseOrNull(this.get(part));\n    }\n  }, {\n    key: \"hasOrientSignalRef\",\n    value: function hasOrientSignalRef() {\n      return isSignalRef(this.explicit.orient);\n    }\n  }]);\n  return AxisComponent;\n}(Split);","map":{"version":3,"sources":["../../../../src/compile/axis/component.ts"],"names":[],"mappings":";;;;AACA,SAIE,4BAA4B,QAEvB,YAAY;AAEnB,SAAQ,SAAS,EAAQ,IAAI,QAAO,YAAY;AAChD,SAAQ,WAAW,QAAO,mBAAmB;AAC7C,SAAQ,KAAK,QAAO,UAAU;AAE9B,SAAS,aAAa,CAAC,CAAM,EAAA;EAC3B,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI;AAClC;AASA,IAAM,+BAA+B,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA;EACnC,OAAO,EAAE,CAAC;EACV,SAAS,EAAE,CAAC;EACZ,KAAK,EAAE;AAAC,CAAA,EACL,4BAA4B,CAAA,EAAA;EAC/B,SAAS,EAAE,CAAC;EACZ,MAAM,EAAE;AAAC,CAAA,CACV;AAED,OAAO,IAAM,yBAAyB,GAAG,IAAI,CAAC,+BAA+B,CAAC;AAE9E,WAAa,aAAc;EAAA;EAAA;EACzB,yBAG8B;IAAA;IAAA,IAFZ,QAAA,uEAAwC,CAAA,CAAE;IAAA,IAC1C,QAAA,uEAAwC,CAAA,CAAE;IAAA,IACnD,aAAA,uEAAgB,KAAK;IAAA;IAE5B;IAJgB,MAAA,QAAQ,GAAR,QAAQ;IACR,MAAA,QAAQ,GAAR,QAAQ;IACjB,MAAA,aAAa,GAAb,aAAa;IAAQ;EAG9B;EAAC;IAAA;IAAA,OAEM,iBAAK;MACV,OAAO,IAAI,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC;IAClG;EAAC;IAAA;IAAA,OAEM,qBAAY,IAAc,EAAA;MAC/B;MAEA,IAAI,IAAI,KAAK,MAAM,EAAE;QACnB;QACA,OAAO,IAAI;MACZ;MAED,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,OAAO,EAAE;QACvC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;MACxB;MACD;MACA,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACvC;EAAC;IAAA;IAAA,OAEM,8BAAkB;MACvB,OAAO,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC1C;EAAC;EAAA;AAAA,EA9BgC,KAAyB","sourceRoot":"","sourcesContent":["import { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { Split } from '../split';\nfunction isFalseOrNull(v) {\n    return v === false || v === null;\n}\nconst AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({ disable: 1, gridScale: 1, scale: 1 }, COMMON_AXIS_PROPERTIES_INDEX), { labelExpr: 1, encode: 1 });\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport class AxisComponent extends Split {\n    constructor(explicit = {}, implicit = {}, mainExtracted = false) {\n        super();\n        this.explicit = explicit;\n        this.implicit = implicit;\n        this.mainExtracted = mainExtracted;\n    }\n    clone() {\n        return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n    }\n    hasAxisPart(part) {\n        // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n        if (part === 'axis') {\n            // always has the axis container part\n            return true;\n        }\n        if (part === 'grid' || part === 'title') {\n            return !!this.get(part);\n        }\n        // Other parts are enabled by default, so they should not be false or null.\n        return !isFalseOrNull(this.get(part));\n    }\n    hasOrientSignalRef() {\n        return isSignalRef(this.explicit.orient);\n    }\n}\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}