{"ast":null,"code":"import * as log from '../log';\nimport { isAnyConcatSpec, isFacetSpec, isLayerSpec, isUnitSpec } from '../spec';\nimport { ConcatModel } from './concat';\nimport { FacetModel } from './facet';\nimport { LayerModel } from './layer';\nimport { UnitModel } from './unit';\nexport function buildModel(spec, parent, parentGivenName, unitSize, config) {\n  if (isFacetSpec(spec)) {\n    return new FacetModel(spec, parent, parentGivenName, config);\n  } else if (isLayerSpec(spec)) {\n    return new LayerModel(spec, parent, parentGivenName, unitSize, config);\n  } else if (isUnitSpec(spec)) {\n    return new UnitModel(spec, parent, parentGivenName, unitSize, config);\n  } else if (isAnyConcatSpec(spec)) {\n    return new ConcatModel(spec, parent, parentGivenName, config);\n  }\n  throw new Error(log.message.invalidSpec(spec));\n}","map":{"version":3,"sources":["../../../src/compile/buildmodel.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,GAAG,MAAM,QAAQ;AAC7B,SAAQ,eAAe,EAAE,WAAW,EAAE,WAAW,EAAE,UAAU,QAAyC,SAAS;AAC/G,SAAQ,WAAW,QAAO,UAAU;AACpC,SAAQ,UAAU,QAAO,SAAS;AAClC,SAAQ,UAAU,QAAO,SAAS;AAElC,SAAQ,SAAS,QAAO,QAAQ;AAEhC,OAAM,SAAU,UAAU,CACxB,IAAoB,EACpB,MAAa,EACb,eAAuB,EACvB,QAA0B,EAC1B,MAAyB,EAAA;EAEzB,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;IACrB,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,CAAC;GAC7D,MAAM,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;IAC5B,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC;GACvE,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;IAC3B,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,CAAC;GACtE,MAAM,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;IAChC,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,CAAC;EAC9D;EACD,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAChD","sourceRoot":"","sourcesContent":["import * as log from '../log';\nimport { isAnyConcatSpec, isFacetSpec, isLayerSpec, isUnitSpec } from '../spec';\nimport { ConcatModel } from './concat';\nimport { FacetModel } from './facet';\nimport { LayerModel } from './layer';\nimport { UnitModel } from './unit';\nexport function buildModel(spec, parent, parentGivenName, unitSize, config) {\n    if (isFacetSpec(spec)) {\n        return new FacetModel(spec, parent, parentGivenName, config);\n    }\n    else if (isLayerSpec(spec)) {\n        return new LayerModel(spec, parent, parentGivenName, unitSize, config);\n    }\n    else if (isUnitSpec(spec)) {\n        return new UnitModel(spec, parent, parentGivenName, unitSize, config);\n    }\n    else if (isAnyConcatSpec(spec)) {\n        return new ConcatModel(spec, parent, parentGivenName, config);\n    }\n    throw new Error(log.message.invalidSpec(spec));\n}\n//# sourceMappingURL=buildmodel.js.map"]},"metadata":{},"sourceType":"module"}