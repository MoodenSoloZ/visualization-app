{"ast":null,"code":"import _toConsumableArray from \"/Users/weihangzhang/Documents/webpage/visualization-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { getViewConfigContinuousSize } from '../../config';\nimport { hasDiscreteDomain } from '../../scale';\nimport { getFirstDefined } from '../../util';\nimport { isSignalRef, isVgRangeStep } from '../../vega.schema';\nimport { signalOrStringValue } from '../common';\nimport { isFacetModel } from '../model';\nexport function assembleLayoutSignals(model) {\n  return [].concat(_toConsumableArray(sizeSignals(model, 'width')), _toConsumableArray(sizeSignals(model, 'height')), _toConsumableArray(sizeSignals(model, 'childWidth')), _toConsumableArray(sizeSignals(model, 'childHeight')));\n}\nexport function sizeSignals(model, sizeType) {\n  var channel = sizeType === 'width' ? 'x' : 'y';\n  var size = model.component.layoutSize.get(sizeType);\n  if (!size || size === 'merged') {\n    return [];\n  }\n  // Read size signal name from name map, just in case it is the top-level size signal that got renamed.\n  var name = model.getSizeSignalRef(sizeType).signal;\n  if (size === 'step') {\n    var scaleComponent = model.getScaleComponent(channel);\n    if (scaleComponent) {\n      var type = scaleComponent.get('type');\n      var range = scaleComponent.get('range');\n      if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n        var scaleName = model.scaleName(channel);\n        if (isFacetModel(model.parent)) {\n          // If parent is facet and this is an independent scale, return only signal signal\n          // as the width/height will be calculated using the cardinality from\n          // facet's aggregate rather than reading from scale domain\n          var parentResolve = model.parent.component.resolve;\n          if (parentResolve.scale[channel] === 'independent') {\n            return [stepSignal(scaleName, range)];\n          }\n        }\n        return [stepSignal(scaleName, range), {\n          name: name,\n          update: sizeExpr(scaleName, scaleComponent, \"domain('\".concat(scaleName, \"').length\"))\n        }];\n      }\n    }\n    /* istanbul ignore next: Condition should not happen -- only for warning in development. */\n    throw new Error('layout size is step although width/height is not step.');\n  } else if (size == 'container') {\n    var isWidth = name.endsWith('width');\n    var expr = isWidth ? 'containerSize()[0]' : 'containerSize()[1]';\n    var defaultValue = getViewConfigContinuousSize(model.config.view, isWidth ? 'width' : 'height');\n    var safeExpr = \"isFinite(\".concat(expr, \") ? \").concat(expr, \" : \").concat(defaultValue);\n    return [{\n      name: name,\n      init: safeExpr,\n      on: [{\n        update: safeExpr,\n        events: 'window:resize'\n      }]\n    }];\n  } else {\n    return [{\n      name: name,\n      value: size\n    }];\n  }\n}\nfunction stepSignal(scaleName, range) {\n  var name = \"\".concat(scaleName, \"_step\");\n  if (isSignalRef(range.step)) {\n    return {\n      name: name,\n      update: range.step.signal\n    };\n  } else {\n    return {\n      name: name,\n      value: range.step\n    };\n  }\n}\nexport function sizeExpr(scaleName, scaleComponent, cardinality) {\n  var type = scaleComponent.get('type');\n  var padding = scaleComponent.get('padding');\n  var paddingOuter = getFirstDefined(scaleComponent.get('paddingOuter'), padding);\n  var paddingInner = scaleComponent.get('paddingInner');\n  paddingInner = type === 'band' ?\n  // only band has real paddingInner\n  paddingInner !== undefined ? paddingInner : padding :\n  // For point, as calculated in https://github.com/vega/vega-scale/blob/master/src/band.js#L128,\n  // it's equivalent to have paddingInner = 1 since there is only n-1 steps between n points.\n  1;\n  return \"bandspace(\".concat(cardinality, \", \").concat(signalOrStringValue(paddingInner), \", \").concat(signalOrStringValue(paddingOuter), \") * \").concat(scaleName, \"_step\");\n}","map":{"version":3,"sources":["../../../../src/compile/layoutsize/assemble.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { getViewConfigContinuousSize } from '../../config';\nimport { hasDiscreteDomain } from '../../scale';\nimport { getFirstDefined } from '../../util';\nimport { isSignalRef, isVgRangeStep } from '../../vega.schema';\nimport { signalOrStringValue } from '../common';\nimport { isFacetModel } from '../model';\nexport function assembleLayoutSignals(model) {\n    return [\n        ...sizeSignals(model, 'width'),\n        ...sizeSignals(model, 'height'),\n        ...sizeSignals(model, 'childWidth'),\n        ...sizeSignals(model, 'childHeight')\n    ];\n}\nexport function sizeSignals(model, sizeType) {\n    const channel = sizeType === 'width' ? 'x' : 'y';\n    const size = model.component.layoutSize.get(sizeType);\n    if (!size || size === 'merged') {\n        return [];\n    }\n    // Read size signal name from name map, just in case it is the top-level size signal that got renamed.\n    const name = model.getSizeSignalRef(sizeType).signal;\n    if (size === 'step') {\n        const scaleComponent = model.getScaleComponent(channel);\n        if (scaleComponent) {\n            const type = scaleComponent.get('type');\n            const range = scaleComponent.get('range');\n            if (hasDiscreteDomain(type) && isVgRangeStep(range)) {\n                const scaleName = model.scaleName(channel);\n                if (isFacetModel(model.parent)) {\n                    // If parent is facet and this is an independent scale, return only signal signal\n                    // as the width/height will be calculated using the cardinality from\n                    // facet's aggregate rather than reading from scale domain\n                    const parentResolve = model.parent.component.resolve;\n                    if (parentResolve.scale[channel] === 'independent') {\n                        return [stepSignal(scaleName, range)];\n                    }\n                }\n                return [\n                    stepSignal(scaleName, range),\n                    {\n                        name,\n                        update: sizeExpr(scaleName, scaleComponent, `domain('${scaleName}').length`)\n                    }\n                ];\n            }\n        }\n        /* istanbul ignore next: Condition should not happen -- only for warning in development. */\n        throw new Error('layout size is step although width/height is not step.');\n    }\n    else if (size == 'container') {\n        const isWidth = name.endsWith('width');\n        const expr = isWidth ? 'containerSize()[0]' : 'containerSize()[1]';\n        const defaultValue = getViewConfigContinuousSize(model.config.view, isWidth ? 'width' : 'height');\n        const safeExpr = `isFinite(${expr}) ? ${expr} : ${defaultValue}`;\n        return [{ name, init: safeExpr, on: [{ update: safeExpr, events: 'window:resize' }] }];\n    }\n    else {\n        return [\n            {\n                name,\n                value: size\n            }\n        ];\n    }\n}\nfunction stepSignal(scaleName, range) {\n    const name = `${scaleName}_step`;\n    if (isSignalRef(range.step)) {\n        return { name, update: range.step.signal };\n    }\n    else {\n        return { name, value: range.step };\n    }\n}\nexport function sizeExpr(scaleName, scaleComponent, cardinality) {\n    const type = scaleComponent.get('type');\n    const padding = scaleComponent.get('padding');\n    const paddingOuter = getFirstDefined(scaleComponent.get('paddingOuter'), padding);\n    let paddingInner = scaleComponent.get('paddingInner');\n    paddingInner =\n        type === 'band'\n            ? // only band has real paddingInner\n                paddingInner !== undefined\n                    ? paddingInner\n                    : padding\n            : // For point, as calculated in https://github.com/vega/vega-scale/blob/master/src/band.js#L128,\n                // it's equivalent to have paddingInner = 1 since there is only n-1 steps between n points.\n                1;\n    return `bandspace(${cardinality}, ${signalOrStringValue(paddingInner)}, ${signalOrStringValue(paddingOuter)}) * ${scaleName}_step`;\n}\n//# sourceMappingURL=assemble.js.map"]},"metadata":{},"sourceType":"module"}