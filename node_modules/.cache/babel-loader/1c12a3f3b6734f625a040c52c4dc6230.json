{"ast":null,"code":"import _toConsumableArray from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { parseExpression } from 'vega-expression';\nfunction getName(node) {\n  var name = [];\n  if (node.type === 'Identifier') {\n    return [node.name];\n  }\n  if (node.type === 'Literal') {\n    return [node.value];\n  }\n  if (node.type === 'MemberExpression') {\n    name.push.apply(name, _toConsumableArray(getName(node.object)));\n    name.push.apply(name, _toConsumableArray(getName(node.property)));\n  }\n  return name;\n}\nfunction startsWithDatum(node) {\n  if (node.object.type === 'MemberExpression') {\n    return startsWithDatum(node.object);\n  }\n  return node.object.name === 'datum';\n}\nexport function getDependentFields(expression) {\n  var ast = parseExpression(expression);\n  var dependents = new Set();\n  // visit is missing in types https://github.com/vega/vega/issues/3298\n  ast.visit(function (node) {\n    if (node.type === 'MemberExpression' && startsWithDatum(node)) {\n      dependents.add(getName(node).slice(1).join('.'));\n    }\n  });\n  return dependents;\n}","map":{"version":3,"sources":["../../../../src/compile/data/expressions.ts"],"names":[],"mappings":";AAAA,SAAQ,eAAe,QAAO,iBAAiB;AAE/C,SAAS,OAAO,CAAC,IAAS,EAAA;EACxB,IAAM,IAAI,GAAa,EAAE;EAEzB,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAE;IAC9B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;EACnB;EAED,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;IAC3B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;EACpB;EAED,IAAI,IAAI,CAAC,IAAI,KAAK,kBAAkB,EAAE;IACpC,IAAI,CAAC,IAAI,OAAT,IAAI,qBAAS,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC;IAClC,IAAI,CAAC,IAAI,OAAT,IAAI,qBAAS,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;EACrC;EAED,OAAO,IAAI;AACb;AAEA,SAAS,eAAe,CAAC,IAAS,EAAA;EAChC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,kBAAkB,EAAE;IAC3C,OAAO,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC;EACpC;EACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,OAAO;AACrC;AAEA,OAAM,SAAU,kBAAkB,CAAC,UAAkB,EAAA;EACnD,IAAM,GAAG,GAAG,eAAe,CAAC,UAAU,CAAC;EACvC,IAAM,UAAU,GAAG,IAAI,GAAG,EAAU;EACpC;EACC,GAAW,CAAC,KAAK,CAAC,UAAC,IAAS,EAAI;IAC/B,IAAI,IAAI,CAAC,IAAI,KAAK,kBAAkB,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;MAC7D,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjD;EACH,CAAC,CAAC;EAEF,OAAO,UAAU;AACnB","sourceRoot":"","sourcesContent":["import { parseExpression } from 'vega-expression';\nfunction getName(node) {\n    const name = [];\n    if (node.type === 'Identifier') {\n        return [node.name];\n    }\n    if (node.type === 'Literal') {\n        return [node.value];\n    }\n    if (node.type === 'MemberExpression') {\n        name.push(...getName(node.object));\n        name.push(...getName(node.property));\n    }\n    return name;\n}\nfunction startsWithDatum(node) {\n    if (node.object.type === 'MemberExpression') {\n        return startsWithDatum(node.object);\n    }\n    return node.object.name === 'datum';\n}\nexport function getDependentFields(expression) {\n    const ast = parseExpression(expression);\n    const dependents = new Set();\n    // visit is missing in types https://github.com/vega/vega/issues/3298\n    ast.visit((node) => {\n        if (node.type === 'MemberExpression' && startsWithDatum(node)) {\n            dependents.add(getName(node).slice(1).join('.'));\n        }\n    });\n    return dependents;\n}\n//# sourceMappingURL=expressions.js.map"]},"metadata":{},"sourceType":"module"}