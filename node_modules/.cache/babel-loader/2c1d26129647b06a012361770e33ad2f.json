{"ast":null,"code":"/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nvar isWorkerRuntime = function isWorkerRuntime() {\n  var isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n  return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nvar postMessageToMaster = function postMessageToMaster(data, transferList) {\n  self.postMessage(data, transferList);\n};\nvar subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n  var messageHandler = function messageHandler(messageEvent) {\n    onMessage(messageEvent.data);\n  };\n  var unsubscribe = function unsubscribe() {\n    self.removeEventListener(\"message\", messageHandler);\n  };\n  self.addEventListener(\"message\", messageHandler);\n  return unsubscribe;\n};\nexport default {\n  isWorkerRuntime: isWorkerRuntime,\n  postMessageToMaster: postMessageToMaster,\n  subscribeToMasterMessages: subscribeToMasterMessages\n};","map":{"version":3,"names":["isWorkerRuntime","isWindowContext","self","Window","postMessage","postMessageToMaster","data","transferList","subscribeToMasterMessages","onMessage","messageHandler","messageEvent","unsubscribe","removeEventListener","addEventListener"],"sources":["/Users/weihangzhang/Documents/webpage/visualization-app-git/node_modules/gosling.js/node_modules/threads/dist-esm/worker/implementation.browser.js"],"sourcesContent":["/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexport default {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n"],"mappings":"AAAA;AACA;AACA,IAAMA,eAAe,GAAG,SAASA,eAAe,GAAG;EAC/C,IAAMC,eAAe,GAAG,OAAOC,IAAI,KAAK,WAAW,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAID,IAAI,YAAYC,MAAM;EAC9G,OAAO,OAAOD,IAAI,KAAK,WAAW,IAAIA,IAAI,CAACE,WAAW,IAAI,CAACH,eAAe,GAAG,IAAI,GAAG,KAAK;AAC7F,CAAC;AACD,IAAMI,mBAAmB,GAAG,SAASA,mBAAmB,CAACC,IAAI,EAAEC,YAAY,EAAE;EACzEL,IAAI,CAACE,WAAW,CAACE,IAAI,EAAEC,YAAY,CAAC;AACxC,CAAC;AACD,IAAMC,yBAAyB,GAAG,SAASA,yBAAyB,CAACC,SAAS,EAAE;EAC5E,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,YAAY,EAAK;IACrCF,SAAS,CAACE,YAAY,CAACL,IAAI,CAAC;EAChC,CAAC;EACD,IAAMM,WAAW,GAAG,SAAdA,WAAW,GAAS;IACtBV,IAAI,CAACW,mBAAmB,CAAC,SAAS,EAAEH,cAAc,CAAC;EACvD,CAAC;EACDR,IAAI,CAACY,gBAAgB,CAAC,SAAS,EAAEJ,cAAc,CAAC;EAChD,OAAOE,WAAW;AACtB,CAAC;AACD,eAAe;EACXZ,eAAe,EAAfA,eAAe;EACfK,mBAAmB,EAAnBA,mBAAmB;EACnBG,yBAAyB,EAAzBA;AACJ,CAAC"},"metadata":{},"sourceType":"module"}