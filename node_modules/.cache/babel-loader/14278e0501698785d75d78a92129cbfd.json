{"ast":null,"code":"window.higlassTracks = window.higlassTracks || {};\nwindow.higlassTracksByType = window.higlassTracksByType || {};\nwindow.higlassDataFetchersByType = window.higlassDataFetchersByType || {};\nvar getRandomName = function getRandomName() {\n  return Math.random().toString(36).substring(2, 8);\n};\nvar registerTrack = function registerTrack(trackDef) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$force = _ref.force,\n    force = _ref$force === void 0 ? false : _ref$force;\n  // The following is only needed for backward compatibility\n  var name = getRandomName();\n  while (window.higlassTracks[name]) {\n    name = getRandomName();\n  }\n  trackDef.name = name;\n  window.higlassTracks[trackDef.name] = trackDef;\n  // backward compatibility: end\n\n  if (window.higlassTracksByType[trackDef.config.type] && !force) {\n    // eslint-disable-next-line\n    console.warn(\"A track with the same type (\".concat(trackDef.config.type, \") was already \") + 'registered. To override it, set force to true.');\n  } else {\n    window.higlassTracksByType[trackDef.config.type] = trackDef;\n  }\n};\nvar registerDataFetcher = function registerDataFetcher(dataFetcherDef) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref2$force = _ref2.force,\n    force = _ref2$force === void 0 ? false : _ref2$force;\n  if (window.higlassDataFetchersByType[dataFetcherDef.config.type] && !force) {\n    // eslint-disable-next-line\n    console.warn(\"A data fetcher with the same type (\".concat(dataFetcherDef.config.type, \") was already \") + 'registered. To override it, set force to true.');\n  } else {\n    window.higlassDataFetchersByType[dataFetcherDef.config.type] = dataFetcherDef;\n  }\n};\nvar register = function register(definition) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$pluginType = options.pluginType,\n    pluginType = _options$pluginType === void 0 ? 'track' : _options$pluginType;\n  if (pluginType === 'track') {\n    registerTrack(definition, options);\n  } else if (pluginType === 'dataFetcher') {\n    registerDataFetcher(definition, options);\n  }\n};\nexport default register;","map":{"version":3,"names":["window","higlassTracks","higlassTracksByType","higlassDataFetchersByType","getRandomName","Math","random","toString","substring","registerTrack","trackDef","force","name","config","type","console","warn","registerDataFetcher","dataFetcherDef","register","definition","options","pluginType"],"sources":["/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/higlass-register/src/index.js"],"sourcesContent":["window.higlassTracks = window.higlassTracks || {};\nwindow.higlassTracksByType = window.higlassTracksByType || {};\nwindow.higlassDataFetchersByType = window.higlassDataFetchersByType || {};\n\nconst getRandomName = () => Math.random().toString(36).substring(2, 8);\n\nconst registerTrack = (trackDef, { force = false } = {}) => {\n  // The following is only needed for backward compatibility\n  let name = getRandomName();\n  while (window.higlassTracks[name]) {\n    name = getRandomName();\n  }\n\n  trackDef.name = name;\n  window.higlassTracks[trackDef.name] = trackDef;\n  // backward compatibility: end\n\n  if (window.higlassTracksByType[trackDef.config.type] && !force) {\n    // eslint-disable-next-line\n    console.warn(\n      `A track with the same type (${trackDef.config.type}) was already ` +\n      'registered. To override it, set force to true.',\n    );\n  } else {\n    window.higlassTracksByType[trackDef.config.type] = trackDef;\n  }\n};\n\nconst registerDataFetcher = (dataFetcherDef, { force = false } = {}) => {\n  if (window.higlassDataFetchersByType[dataFetcherDef.config.type] && !force) {\n    // eslint-disable-next-line\n    console.warn(\n      `A data fetcher with the same type (${dataFetcherDef.config.type}) was already ` +\n      'registered. To override it, set force to true.',\n    );\n  } else {\n    window.higlassDataFetchersByType[dataFetcherDef.config.type] = dataFetcherDef;\n  }\n};\n\nconst register = (definition, options = {}) => {\n  const { pluginType = 'track' } = options;\n  if (pluginType === 'track') {\n    registerTrack(definition, options);\n  } else if (pluginType === 'dataFetcher') {\n    registerDataFetcher(definition, options);\n  }\n};\n\nexport default register;\n"],"mappings":"AAAAA,MAAM,CAACC,aAAa,GAAGD,MAAM,CAACC,aAAa,IAAI,CAAC,CAAC;AACjDD,MAAM,CAACE,mBAAmB,GAAGF,MAAM,CAACE,mBAAmB,IAAI,CAAC,CAAC;AAC7DF,MAAM,CAACG,yBAAyB,GAAGH,MAAM,CAACG,yBAAyB,IAAI,CAAC,CAAC;AAEzE,IAAMC,aAAa,GAAG,SAAhBA,aAAa;EAAA,OAASC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;AAAA;AAEtE,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,QAAQ,EAA6B;EAAA,+EAAP,CAAC,CAAC;IAAA,kBAApBC,KAAK;IAALA,KAAK,2BAAG,KAAK;EAC9C;EACA,IAAIC,IAAI,GAAGR,aAAa,EAAE;EAC1B,OAAOJ,MAAM,CAACC,aAAa,CAACW,IAAI,CAAC,EAAE;IACjCA,IAAI,GAAGR,aAAa,EAAE;EACxB;EAEAM,QAAQ,CAACE,IAAI,GAAGA,IAAI;EACpBZ,MAAM,CAACC,aAAa,CAACS,QAAQ,CAACE,IAAI,CAAC,GAAGF,QAAQ;EAC9C;;EAEA,IAAIV,MAAM,CAACE,mBAAmB,CAACQ,QAAQ,CAACG,MAAM,CAACC,IAAI,CAAC,IAAI,CAACH,KAAK,EAAE;IAC9D;IACAI,OAAO,CAACC,IAAI,CACV,sCAA+BN,QAAQ,CAACG,MAAM,CAACC,IAAI,sBACnD,gDAAgD,CACjD;EACH,CAAC,MAAM;IACLd,MAAM,CAACE,mBAAmB,CAACQ,QAAQ,CAACG,MAAM,CAACC,IAAI,CAAC,GAAGJ,QAAQ;EAC7D;AACF,CAAC;AAED,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,cAAc,EAA6B;EAAA,gFAAP,CAAC,CAAC;IAAA,oBAApBP,KAAK;IAALA,KAAK,4BAAG,KAAK;EAC1D,IAAIX,MAAM,CAACG,yBAAyB,CAACe,cAAc,CAACL,MAAM,CAACC,IAAI,CAAC,IAAI,CAACH,KAAK,EAAE;IAC1E;IACAI,OAAO,CAACC,IAAI,CACV,6CAAsCE,cAAc,CAACL,MAAM,CAACC,IAAI,sBAChE,gDAAgD,CACjD;EACH,CAAC,MAAM;IACLd,MAAM,CAACG,yBAAyB,CAACe,cAAc,CAACL,MAAM,CAACC,IAAI,CAAC,GAAGI,cAAc;EAC/E;AACF,CAAC;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,UAAU,EAAmB;EAAA,IAAjBC,OAAO,uEAAG,CAAC,CAAC;EACxC,0BAAiCA,OAAO,CAAhCC,UAAU;IAAVA,UAAU,oCAAG,OAAO;EAC5B,IAAIA,UAAU,KAAK,OAAO,EAAE;IAC1Bb,aAAa,CAACW,UAAU,EAAEC,OAAO,CAAC;EACpC,CAAC,MAAM,IAAIC,UAAU,KAAK,aAAa,EAAE;IACvCL,mBAAmB,CAACG,UAAU,EAAEC,OAAO,CAAC;EAC1C;AACF,CAAC;AAED,eAAeF,QAAQ"},"metadata":{},"sourceType":"module"}