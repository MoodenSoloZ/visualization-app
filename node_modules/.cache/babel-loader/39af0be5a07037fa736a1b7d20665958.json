{"ast":null,"code":"import { Observable } from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\nfunction merge() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n  if (observables.length === 0) {\n    return Observable.from([]);\n  }\n  return new Observable(function (observer) {\n    var completed = 0;\n    var subscriptions = observables.map(function (input) {\n      return input.subscribe({\n        error: function error(_error) {\n          observer.error(_error);\n          unsubscribeAll();\n        },\n        next: function next(value) {\n          observer.next(value);\n        },\n        complete: function complete() {\n          if (++completed === observables.length) {\n            observer.complete();\n            unsubscribeAll();\n          }\n        }\n      });\n    });\n    var unsubscribeAll = function unsubscribeAll() {\n      subscriptions.forEach(function (subscription) {\n        return unsubscribe(subscription);\n      });\n    };\n    return unsubscribeAll;\n  });\n}\nexport default merge;","map":{"version":3,"names":["Observable","unsubscribe","merge","observables","length","from","observer","completed","subscriptions","map","input","subscribe","error","unsubscribeAll","next","value","complete","forEach","subscription"],"sources":["/Users/weihangzhang/Documents/webpage/visualization-app-git/node_modules/observable-fns/dist.esm/merge.js"],"sourcesContent":["import { Observable } from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\nfunction merge(...observables) {\n    if (observables.length === 0) {\n        return Observable.from([]);\n    }\n    return new Observable(observer => {\n        let completed = 0;\n        const subscriptions = observables.map(input => {\n            return input.subscribe({\n                error(error) {\n                    observer.error(error);\n                    unsubscribeAll();\n                },\n                next(value) {\n                    observer.next(value);\n                },\n                complete() {\n                    if (++completed === observables.length) {\n                        observer.complete();\n                        unsubscribeAll();\n                    }\n                }\n            });\n        });\n        const unsubscribeAll = () => {\n            subscriptions.forEach(subscription => unsubscribe(subscription));\n        };\n        return unsubscribeAll;\n    });\n}\nexport default merge;\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,KAAK,GAAiB;EAAA,kCAAbC,WAAW;IAAXA,WAAW;EAAA;EACzB,IAAIA,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAOJ,UAAU,CAACK,IAAI,CAAC,EAAE,CAAC;EAC9B;EACA,OAAO,IAAIL,UAAU,CAAC,UAAAM,QAAQ,EAAI;IAC9B,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAMC,aAAa,GAAGL,WAAW,CAACM,GAAG,CAAC,UAAAC,KAAK,EAAI;MAC3C,OAAOA,KAAK,CAACC,SAAS,CAAC;QACnBC,KAAK,iBAACA,MAAK,EAAE;UACTN,QAAQ,CAACM,KAAK,CAACA,MAAK,CAAC;UACrBC,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,gBAACC,KAAK,EAAE;UACRT,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAAC;QACxB,CAAC;QACDC,QAAQ,sBAAG;UACP,IAAI,EAAET,SAAS,KAAKJ,WAAW,CAACC,MAAM,EAAE;YACpCE,QAAQ,CAACU,QAAQ,EAAE;YACnBH,cAAc,EAAE;UACpB;QACJ;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAMA,cAAc,GAAG,SAAjBA,cAAc,GAAS;MACzBL,aAAa,CAACS,OAAO,CAAC,UAAAC,YAAY;QAAA,OAAIjB,WAAW,CAACiB,YAAY,CAAC;MAAA,EAAC;IACpE,CAAC;IACD,OAAOL,cAAc;EACzB,CAAC,CAAC;AACN;AACA,eAAeX,KAAK"},"metadata":{},"sourceType":"module"}