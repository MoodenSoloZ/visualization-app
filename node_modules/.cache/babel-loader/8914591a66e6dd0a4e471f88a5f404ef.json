{"ast":null,"code":"import _inherits from \"/Users/weihangzhang/Documents/webpage/visualization-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/weihangzhang/Documents/webpage/visualization-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/weihangzhang/Documents/webpage/visualization-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _createClass from \"/Users/weihangzhang/Documents/webpage/visualization-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/weihangzhang/Documents/webpage/visualization-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n// tslint:disable max-classes-per-file\nimport { getBundleURL } from \"./get-bundle-url.browser\";\nexport var defaultPoolSize = typeof navigator !== \"undefined\" && navigator.hardwareConcurrency ? navigator.hardwareConcurrency : 4;\nvar isAbsoluteURL = function isAbsoluteURL(value) {\n  return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(value);\n};\nfunction createSourceBlobURL(code) {\n  var blob = new Blob([code], {\n    type: \"application/javascript\"\n  });\n  return URL.createObjectURL(blob);\n}\nfunction selectWorkerImplementation() {\n  if (typeof Worker === \"undefined\") {\n    // Might happen on Safari, for instance\n    // The idea is to only fail if the constructor is actually used\n    return /*#__PURE__*/_createClass(function NoWebWorker() {\n      _classCallCheck(this, NoWebWorker);\n      throw Error(\"No web worker implementation available. You might have tried to spawn a worker within a worker in a browser that doesn't support workers in workers.\");\n    });\n  }\n  var WebWorker = /*#__PURE__*/function (_Worker) {\n    _inherits(WebWorker, _Worker);\n    var _super = _createSuper(WebWorker);\n    function WebWorker(url, options) {\n      _classCallCheck(this, WebWorker);\n      var _a, _b;\n      if (typeof url === \"string\" && options && options._baseURL) {\n        url = new URL(url, options._baseURL);\n      } else if (typeof url === \"string\" && !isAbsoluteURL(url) && getBundleURL().match(/^file:\\/\\//i)) {\n        url = new URL(url, getBundleURL().replace(/\\/[^\\/]+$/, \"/\"));\n        if ((_a = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _a !== void 0 ? _a : true) {\n          url = createSourceBlobURL(\"importScripts(\".concat(JSON.stringify(url), \");\"));\n        }\n      }\n      if (typeof url === \"string\" && isAbsoluteURL(url)) {\n        // Create source code blob loading JS file via `importScripts()`\n        // to circumvent worker CORS restrictions\n        if ((_b = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _b !== void 0 ? _b : true) {\n          url = createSourceBlobURL(\"importScripts(\".concat(JSON.stringify(url), \");\"));\n        }\n      }\n      return _super.call(this, url, options);\n    }\n    return _createClass(WebWorker);\n  }( /*#__PURE__*/_wrapNativeSuper(Worker));\n  var BlobWorker = /*#__PURE__*/function (_WebWorker) {\n    _inherits(BlobWorker, _WebWorker);\n    var _super2 = _createSuper(BlobWorker);\n    function BlobWorker(blob, options) {\n      _classCallCheck(this, BlobWorker);\n      var url = window.URL.createObjectURL(blob);\n      return _super2.call(this, url, options);\n    }\n    _createClass(BlobWorker, null, [{\n      key: \"fromText\",\n      value: function fromText(source, options) {\n        var blob = new window.Blob([source], {\n          type: \"text/javascript\"\n        });\n        return new BlobWorker(blob, options);\n      }\n    }]);\n    return BlobWorker;\n  }(WebWorker);\n  return {\n    blob: BlobWorker,\n    default: WebWorker\n  };\n}\nvar implementation;\nexport function getWorkerImplementation() {\n  if (!implementation) {\n    implementation = selectWorkerImplementation();\n  }\n  return implementation;\n}\nexport function isWorkerRuntime() {\n  var isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n  return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n}","map":{"version":3,"names":["getBundleURL","defaultPoolSize","navigator","hardwareConcurrency","isAbsoluteURL","value","test","createSourceBlobURL","code","blob","Blob","type","URL","createObjectURL","selectWorkerImplementation","Worker","Error","WebWorker","url","options","_a","_b","_baseURL","match","replace","CORSWorkaround","JSON","stringify","BlobWorker","window","source","default","implementation","getWorkerImplementation","isWorkerRuntime","isWindowContext","self","Window","postMessage"],"sources":["/Users/weihangzhang/Documents/webpage/visualization-app/node_modules/gosling.js/node_modules/threads/dist-esm/master/implementation.browser.js"],"sourcesContent":["// tslint:disable max-classes-per-file\nimport { getBundleURL } from \"./get-bundle-url.browser\";\nexport const defaultPoolSize = typeof navigator !== \"undefined\" && navigator.hardwareConcurrency\n    ? navigator.hardwareConcurrency\n    : 4;\nconst isAbsoluteURL = (value) => /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(value);\nfunction createSourceBlobURL(code) {\n    const blob = new Blob([code], { type: \"application/javascript\" });\n    return URL.createObjectURL(blob);\n}\nfunction selectWorkerImplementation() {\n    if (typeof Worker === \"undefined\") {\n        // Might happen on Safari, for instance\n        // The idea is to only fail if the constructor is actually used\n        return class NoWebWorker {\n            constructor() {\n                throw Error(\"No web worker implementation available. You might have tried to spawn a worker within a worker in a browser that doesn't support workers in workers.\");\n            }\n        };\n    }\n    class WebWorker extends Worker {\n        constructor(url, options) {\n            var _a, _b;\n            if (typeof url === \"string\" && options && options._baseURL) {\n                url = new URL(url, options._baseURL);\n            }\n            else if (typeof url === \"string\" && !isAbsoluteURL(url) && getBundleURL().match(/^file:\\/\\//i)) {\n                url = new URL(url, getBundleURL().replace(/\\/[^\\/]+$/, \"/\"));\n                if ((_a = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _a !== void 0 ? _a : true) {\n                    url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n                }\n            }\n            if (typeof url === \"string\" && isAbsoluteURL(url)) {\n                // Create source code blob loading JS file via `importScripts()`\n                // to circumvent worker CORS restrictions\n                if ((_b = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _b !== void 0 ? _b : true) {\n                    url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n                }\n            }\n            super(url, options);\n        }\n    }\n    class BlobWorker extends WebWorker {\n        constructor(blob, options) {\n            const url = window.URL.createObjectURL(blob);\n            super(url, options);\n        }\n        static fromText(source, options) {\n            const blob = new window.Blob([source], { type: \"text/javascript\" });\n            return new BlobWorker(blob, options);\n        }\n    }\n    return {\n        blob: BlobWorker,\n        default: WebWorker\n    };\n}\nlet implementation;\nexport function getWorkerImplementation() {\n    if (!implementation) {\n        implementation = selectWorkerImplementation();\n    }\n    return implementation;\n}\nexport function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}