{"ast":null,"code":"import _defineProperty from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _symbols, _formats;\nimport { toNumber, peek, hasOwnProperty, toSet, array, constant, isNumber, span, isObject, isString, error, isArray } from 'vega-util';\nimport { bisectRight, range, bisect } from 'd3-array';\nimport * as $ from 'd3-scale';\nimport { scaleOrdinal, tickFormat as tickFormat$1 } from 'd3-scale';\nexport { scaleImplicit } from 'd3-scale';\nimport * as $$1 from 'd3-interpolate';\nimport { timeInterval, utcInterval } from 'vega-time';\nfunction bandSpace(count, paddingInner, paddingOuter) {\n  var space = count - paddingInner + paddingOuter * 2;\n  return count ? space > 0 ? space : 1 : 0;\n}\nvar Identity = 'identity';\nvar Linear = 'linear';\nvar Log = 'log';\nvar Pow = 'pow';\nvar Sqrt = 'sqrt';\nvar Symlog = 'symlog';\nvar Time = 'time';\nvar UTC = 'utc';\nvar Sequential = 'sequential';\nvar Diverging = 'diverging';\nvar Quantile = 'quantile';\nvar Quantize = 'quantize';\nvar Threshold = 'threshold';\nvar Ordinal = 'ordinal';\nvar Point = 'point';\nvar Band = 'band';\nvar BinOrdinal = 'bin-ordinal'; // categories\n\nvar Continuous = 'continuous';\nvar Discrete = 'discrete';\nvar Discretizing = 'discretizing';\nvar Interpolating = 'interpolating';\nvar Temporal = 'temporal';\nfunction invertRange(scale) {\n  return function (_) {\n    var lo = _[0],\n      hi = _[1],\n      t;\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n    return [scale.invert(lo), scale.invert(hi)];\n  };\n}\nfunction invertRangeExtent(scale) {\n  return function (_) {\n    var range = scale.range();\n    var lo = _[0],\n      hi = _[1],\n      min = -1,\n      max,\n      t,\n      i,\n      n;\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n    for (i = 0, n = range.length; i < n; ++i) {\n      if (range[i] >= lo && range[i] <= hi) {\n        if (min < 0) min = i;\n        max = i;\n      }\n    }\n    if (min < 0) return undefined;\n    lo = scale.invertExtent(range[min]);\n    hi = scale.invertExtent(range[max]);\n    return [lo[0] === undefined ? lo[1] : lo[0], hi[1] === undefined ? hi[0] : hi[1]];\n  };\n}\nfunction band() {\n  var scale = scaleOrdinal().unknown(undefined),\n    domain = scale.domain,\n    ordinalRange = scale.range;\n  var range$1 = [0, 1],\n    step,\n    bandwidth,\n    round = false,\n    paddingInner = 0,\n    paddingOuter = 0,\n    align = 0.5;\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n      reverse = range$1[1] < range$1[0],\n      stop = range$1[1 - reverse],\n      space = bandSpace(n, paddingInner, paddingOuter);\n    var start = range$1[reverse - 0];\n    step = (stop - start) / (space || 1);\n    if (round) {\n      step = Math.floor(step);\n    }\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) {\n      start = Math.round(start);\n      bandwidth = Math.round(bandwidth);\n    }\n    var values = range(n).map(function (i) {\n      return start + step * i;\n    });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain(_);\n      return rescale();\n    } else {\n      return domain();\n    }\n  };\n  scale.range = function (_) {\n    if (arguments.length) {\n      range$1 = [+_[0], +_[1]];\n      return rescale();\n    } else {\n      return range$1.slice();\n    }\n  };\n  scale.rangeRound = function (_) {\n    range$1 = [+_[0], +_[1]];\n    round = true;\n    return rescale();\n  };\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n  scale.step = function () {\n    return step;\n  };\n  scale.round = function (_) {\n    if (arguments.length) {\n      round = !!_;\n      return rescale();\n    } else {\n      return round;\n    }\n  };\n  scale.padding = function (_) {\n    if (arguments.length) {\n      paddingOuter = Math.max(0, Math.min(1, _));\n      paddingInner = paddingOuter;\n      return rescale();\n    } else {\n      return paddingInner;\n    }\n  };\n  scale.paddingInner = function (_) {\n    if (arguments.length) {\n      paddingInner = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return paddingInner;\n    }\n  };\n  scale.paddingOuter = function (_) {\n    if (arguments.length) {\n      paddingOuter = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return paddingOuter;\n    }\n  };\n  scale.align = function (_) {\n    if (arguments.length) {\n      align = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return align;\n    }\n  };\n  scale.invertRange = function (_) {\n    // bail if range has null or undefined values\n    if (_[0] == null || _[1] == null) return;\n    var reverse = range$1[1] < range$1[0],\n      values = reverse ? ordinalRange().reverse() : ordinalRange(),\n      n = values.length - 1;\n    var lo = +_[0],\n      hi = +_[1],\n      a,\n      b,\n      t; // bail if either range endpoint is invalid\n\n    if (lo !== lo || hi !== hi) return; // order range inputs, bail if outside of scale range\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n    if (hi < values[0] || lo > range$1[1 - reverse]) return; // binary search to index into scale range\n\n    a = Math.max(0, bisectRight(values, lo) - 1);\n    b = lo === hi ? a : bisectRight(values, hi) - 1; // increment index a if lo is within padding gap\n\n    if (lo - values[a] > bandwidth + 1e-10) ++a;\n    if (reverse) {\n      // map + swap\n      t = a;\n      a = n - b;\n      b = n - t;\n    }\n    return a > b ? undefined : domain().slice(a, b + 1);\n  };\n  scale.invert = function (_) {\n    var value = scale.invertRange([_, _]);\n    return value ? value[0] : value;\n  };\n  scale.copy = function () {\n    return band().domain(domain()).range(range$1).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n  return rescale();\n}\nfunction pointish(scale) {\n  var copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  scale.copy = function () {\n    return pointish(copy());\n  };\n  return scale;\n}\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\nvar map = Array.prototype.map;\nfunction numbers(_) {\n  return map.call(_, toNumber);\n}\nvar slice = Array.prototype.slice;\nfunction scaleBinOrdinal() {\n  var domain = [],\n    range = [];\n  function scale(x) {\n    return x == null || x !== x ? undefined : range[(bisect(domain, x) - 1) % range.length];\n  }\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain = numbers(_);\n      return scale;\n    } else {\n      return domain.slice();\n    }\n  };\n  scale.range = function (_) {\n    if (arguments.length) {\n      range = slice.call(_);\n      return scale;\n    } else {\n      return range.slice();\n    }\n  };\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat$1(domain[0], peek(domain), count == null ? 10 : count, specifier);\n  };\n  scale.copy = function () {\n    return scaleBinOrdinal().domain(scale.domain()).range(scale.range());\n  };\n  return scale;\n}\nvar scales = {};\n/**\n * Augment scales with their type and needed inverse methods.\n */\n\nfunction create(type, constructor, metadata) {\n  var ctr = function scale() {\n    var s = constructor();\n    if (!s.invertRange) {\n      s.invertRange = s.invert ? invertRange(s) : s.invertExtent ? invertRangeExtent(s) : undefined;\n    }\n    s.type = type;\n    return s;\n  };\n  ctr.metadata = toSet(array(metadata));\n  return ctr;\n}\nfunction scale(type, scale, metadata) {\n  if (arguments.length > 1) {\n    scales[type] = create(type, scale, metadata);\n    return this;\n  } else {\n    return isValidScaleType(type) ? scales[type] : undefined;\n  }\n} // identity scale\n\nscale(Identity, $.scaleIdentity); // continuous scales\n\nscale(Linear, $.scaleLinear, Continuous);\nscale(Log, $.scaleLog, [Continuous, Log]);\nscale(Pow, $.scalePow, Continuous);\nscale(Sqrt, $.scaleSqrt, Continuous);\nscale(Symlog, $.scaleSymlog, Continuous);\nscale(Time, $.scaleTime, [Continuous, Temporal]);\nscale(UTC, $.scaleUtc, [Continuous, Temporal]); // sequential scales\n\nscale(Sequential, $.scaleSequential, [Continuous, Interpolating]); // backwards compat\n\nscale(\"\".concat(Sequential, \"-\").concat(Linear), $.scaleSequential, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Log), $.scaleSequentialLog, [Continuous, Interpolating, Log]);\nscale(\"\".concat(Sequential, \"-\").concat(Pow), $.scaleSequentialPow, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Sqrt), $.scaleSequentialSqrt, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Symlog), $.scaleSequentialSymlog, [Continuous, Interpolating]); // diverging scales\n\nscale(\"\".concat(Diverging, \"-\").concat(Linear), $.scaleDiverging, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Log), $.scaleDivergingLog, [Continuous, Interpolating, Log]);\nscale(\"\".concat(Diverging, \"-\").concat(Pow), $.scaleDivergingPow, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Sqrt), $.scaleDivergingSqrt, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Symlog), $.scaleDivergingSymlog, [Continuous, Interpolating]); // discretizing scales\n\nscale(Quantile, $.scaleQuantile, [Discretizing, Quantile]);\nscale(Quantize, $.scaleQuantize, Discretizing);\nscale(Threshold, $.scaleThreshold, Discretizing); // discrete scales\n\nscale(BinOrdinal, scaleBinOrdinal, [Discrete, Discretizing]);\nscale(Ordinal, $.scaleOrdinal, Discrete);\nscale(Band, band, Discrete);\nscale(Point, point, Discrete);\nfunction isValidScaleType(type) {\n  return hasOwnProperty(scales, type);\n}\nfunction hasType(key, type) {\n  var s = scales[key];\n  return s && s.metadata[type];\n}\nfunction isContinuous(key) {\n  return hasType(key, Continuous);\n}\nfunction isDiscrete(key) {\n  return hasType(key, Discrete);\n}\nfunction isDiscretizing(key) {\n  return hasType(key, Discretizing);\n}\nfunction isLogarithmic(key) {\n  return hasType(key, Log);\n}\nfunction isTemporal(key) {\n  return hasType(key, Temporal);\n}\nfunction isInterpolating(key) {\n  return hasType(key, Interpolating);\n}\nfunction isQuantile(key) {\n  return hasType(key, Quantile);\n}\nvar scaleProps = ['clamp', 'base', 'constant', 'exponent'];\nfunction interpolateRange(interpolator, range) {\n  var start = range[0],\n    span = peek(range) - start;\n  return function (i) {\n    return interpolator(start + i * span);\n  };\n}\nfunction interpolateColors(colors, type, gamma) {\n  return $$1.piecewise(interpolate(type || 'rgb', gamma), colors);\n}\nfunction quantizeInterpolator(interpolator, count) {\n  var samples = new Array(count),\n    n = count + 1;\n  for (var i = 0; i < count;) {\n    samples[i] = interpolator(++i / n);\n  }\n  return samples;\n}\nfunction scaleCopy(scale) {\n  var t = scale.type,\n    s = scale.copy();\n  s.type = t;\n  return s;\n}\nfunction scaleFraction(scale$1, min, max) {\n  var delta = max - min;\n  var i, t, s;\n  if (!delta || !Number.isFinite(delta)) {\n    return constant(0.5);\n  } else {\n    i = (t = scale$1.type).indexOf('-');\n    t = i < 0 ? t : t.slice(i + 1);\n    s = scale(t)().domain([min, max]).range([0, 1]);\n    scaleProps.forEach(function (m) {\n      return scale$1[m] ? s[m](scale$1[m]()) : 0;\n    });\n    return s;\n  }\n}\nfunction interpolate(type, gamma) {\n  var interp = $$1[method(type)];\n  return gamma != null && interp && interp.gamma ? interp.gamma(gamma) : interp;\n}\nfunction method(type) {\n  return 'interpolate' + type.toLowerCase().split('-').map(function (s) {\n    return s[0].toUpperCase() + s.slice(1);\n  }).join('');\n}\nvar continuous = {\n  blues: 'cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90',\n  greens: 'd3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429',\n  greys: 'e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e',\n  oranges: 'fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303',\n  purples: 'e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c',\n  reds: 'fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13',\n  blueGreen: 'd5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429',\n  bluePurple: 'ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71',\n  greenBlue: 'd3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1',\n  orangeRed: 'fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403',\n  purpleBlue: 'dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281',\n  purpleBlueGreen: 'dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353',\n  purpleRed: 'dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a',\n  redPurple: 'fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174',\n  yellowGreen: 'e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034',\n  yellowOrangeBrown: 'feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204',\n  yellowOrangeRed: 'fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225',\n  blueOrange: '134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07',\n  brownBlueGreen: '704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147',\n  purpleGreen: '5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29',\n  purpleOrange: '4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07',\n  redBlue: '8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85',\n  redGrey: '8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434',\n  yellowGreenBlue: 'eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185',\n  redYellowBlue: 'a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695',\n  redYellowGreen: 'a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837',\n  pinkYellowGreen: '8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419',\n  spectral: '9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2',\n  viridis: '440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725',\n  magma: '0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf',\n  inferno: '0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4',\n  plasma: '0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921',\n  cividis: '00205100235800265d002961012b65042e670831690d346b11366c16396d1c3c6e213f6e26426e2c456e31476e374a6e3c4d6e42506e47536d4c566d51586e555b6e5a5e6e5e616e62646f66676f6a6a706e6d717270717573727976737c79747f7c75827f758682768985778c8877908b78938e789691789a94789e9778a19b78a59e77a9a177aea575b2a874b6ab73bbaf71c0b26fc5b66dc9b96acebd68d3c065d8c462ddc85fe2cb5ce7cf58ebd355f0d652f3da4ff7de4cfae249fce647',\n  rainbow: '6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa',\n  sinebow: 'ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040',\n  turbo: '23171b32204a3e2a71453493493eae4b49c54a53d7485ee44569ee4074f53c7ff8378af93295f72e9ff42ba9ef28b3e926bce125c5d925cdcf27d5c629dcbc2de3b232e9a738ee9d3ff39347f68950f9805afc7765fd6e70fe667cfd5e88fc5795fb51a1f84badf545b9f140c5ec3cd0e637dae034e4d931ecd12ef4c92bfac029ffb626ffad24ffa223ff9821ff8d1fff821dff771cfd6c1af76118f05616e84b14df4111d5380fcb2f0dc0260ab61f07ac1805a313029b0f00950c00910b00',\n  browns: 'eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632',\n  tealBlues: 'bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985',\n  teals: 'bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667',\n  warmGreys: 'dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e',\n  goldGreen: 'f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36',\n  goldOrange: 'f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26',\n  goldRed: 'f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e',\n  lightGreyRed: 'efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b',\n  lightGreyTeal: 'e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc',\n  lightMulti: 'e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c',\n  lightOrange: 'f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b',\n  lightTealBlue: 'e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988',\n  darkBlue: '3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff',\n  darkGold: '3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff',\n  darkGreen: '3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa',\n  darkMulti: '3737371f5287197d8c29a86995ce3fffe800ffffff',\n  darkRed: '3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c'\n};\nvar discrete = {\n  category10: '1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf',\n  category20: '1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5',\n  category20b: '393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6',\n  category20c: '3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9',\n  tableau10: '4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac',\n  tableau20: '4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5',\n  accent: '7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666',\n  dark2: '1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666',\n  paired: 'a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928',\n  pastel1: 'fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2',\n  pastel2: 'b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc',\n  set1: 'e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999',\n  set2: '66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3',\n  set3: '8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f'\n};\nfunction colors(palette) {\n  var n = palette.length / 6 | 0,\n    c = new Array(n);\n  for (var i = 0; i < n;) {\n    c[i] = '#' + palette.slice(i * 6, ++i * 6);\n  }\n  return c;\n}\nfunction apply(_, f) {\n  for (var k in _) {\n    scheme(k, f(_[k]));\n  }\n}\nvar schemes = {};\napply(discrete, colors);\napply(continuous, function (_) {\n  return interpolateColors(colors(_));\n});\nfunction scheme(name, scheme) {\n  name = name && name.toLowerCase();\n  if (arguments.length > 1) {\n    schemes[name] = scheme;\n    return this;\n  } else {\n    return schemes[name];\n  }\n}\nvar SymbolLegend = 'symbol';\nvar DiscreteLegend = 'discrete';\nvar GradientLegend = 'gradient';\nvar defaultFormatter = function defaultFormatter(value) {\n  return isArray(value) ? value.map(function (v) {\n    return String(v);\n  }) : String(value);\n};\nvar ascending = function ascending(a, b) {\n  return a[1] - b[1];\n};\nvar descending = function descending(a, b) {\n  return b[1] - a[1];\n};\n/**\n * Determine the tick count or interval function.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {*} count - The desired tick count or interval specifier.\n * @param {number} minStep - The desired minimum step between tick values.\n * @return {*} - The tick count or interval function.\n */\n\nfunction tickCount(scale, count, minStep) {\n  var step;\n  if (isNumber(count)) {\n    if (scale.bins) {\n      count = Math.max(count, scale.bins.length);\n    }\n    if (minStep != null) {\n      count = Math.min(count, Math.floor(span(scale.domain()) / minStep || 1));\n    }\n  }\n  if (isObject(count)) {\n    step = count.step;\n    count = count.interval;\n  }\n  if (isString(count)) {\n    count = scale.type === Time ? timeInterval(count) : scale.type == UTC ? utcInterval(count) : error('Only time and utc scales accept interval strings.');\n    if (step) count = count.every(step);\n  }\n  return count;\n}\n/**\n * Filter a set of candidate tick values, ensuring that only tick values\n * that lie within the scale range are included.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {Array<*>} ticks - The candidate tick values.\n * @param {*} count - The tick count or interval function.\n * @return {Array<*>} - The filtered tick values.\n */\n\nfunction validTicks(scale, ticks, count) {\n  var range = scale.range(),\n    lo = range[0],\n    hi = peek(range),\n    cmp = ascending;\n  if (lo > hi) {\n    range = hi;\n    hi = lo;\n    lo = range;\n    cmp = descending;\n  }\n  lo = Math.floor(lo);\n  hi = Math.ceil(hi); // filter ticks to valid values within the range\n  // additionally sort ticks in range order (#2579)\n\n  ticks = ticks.map(function (v) {\n    return [v, scale(v)];\n  }).filter(function (_) {\n    return lo <= _[1] && _[1] <= hi;\n  }).sort(cmp).map(function (_) {\n    return _[0];\n  });\n  if (count > 0 && ticks.length > 1) {\n    var endpoints = [ticks[0], peek(ticks)];\n    while (ticks.length > count && ticks.length >= 3) {\n      ticks = ticks.filter(function (_, i) {\n        return !(i % 2);\n      });\n    }\n    if (ticks.length < 3) {\n      ticks = endpoints;\n    }\n  }\n  return ticks;\n}\n/**\n * Generate tick values for the given scale and approximate tick count or\n * interval value. If the scale has a 'ticks' method, it will be used to\n * generate the ticks, with the count argument passed as a parameter. If the\n * scale lacks a 'ticks' method, the full scale domain will be returned.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {*} [count] - The approximate number of desired ticks.\n * @return {Array<*>} - The generated tick values.\n */\n\nfunction tickValues(scale, count) {\n  return scale.bins ? validTicks(scale, scale.bins) : scale.ticks ? scale.ticks(count) : scale.domain();\n}\n/**\n * Generate a label format function for a scale. If the scale has a\n * 'tickFormat' method, it will be used to generate the formatter, with the\n * count and specifier arguments passed as parameters. If the scale lacks a\n * 'tickFormat' method, the returned formatter performs simple string coercion.\n * If the input scale is a logarithmic scale and the format specifier does not\n * indicate a desired decimal precision, a special variable precision formatter\n * that automatically trims trailing zeroes will be generated.\n * @param {Scale} scale - The scale for which to generate the label formatter.\n * @param {*} [count] - The approximate number of desired ticks.\n * @param {string} [specifier] - The format specifier. Must be a legal d3\n *   specifier string (see https://github.com/d3/d3-format#formatSpecifier) or\n *   time multi-format specifier object.\n * @return {function(*):string} - The generated label formatter.\n */\n\nfunction tickFormat(locale, scale, count, specifier, formatType, noSkip) {\n  var type = scale.type;\n  var format = defaultFormatter;\n  if (type === Time || formatType === Time) {\n    format = locale.timeFormat(specifier);\n  } else if (type === UTC || formatType === UTC) {\n    format = locale.utcFormat(specifier);\n  } else if (isLogarithmic(type)) {\n    var varfmt = locale.formatFloat(specifier);\n    if (noSkip || scale.bins) {\n      format = varfmt;\n    } else {\n      var test = tickLog(scale, count, false);\n      format = function format(_) {\n        return test(_) ? varfmt(_) : '';\n      };\n    }\n  } else if (scale.tickFormat) {\n    // if d3 scale has tickFormat, it must be continuous\n    var d = scale.domain();\n    format = locale.formatSpan(d[0], d[d.length - 1], count, specifier);\n  } else if (specifier) {\n    format = locale.format(specifier);\n  }\n  return format;\n}\nfunction tickLog(scale, count, values) {\n  var ticks = tickValues(scale, count),\n    base = scale.base(),\n    logb = Math.log(base),\n    k = Math.max(1, base * count / ticks.length); // apply d3-scale's log format filter criteria\n\n  var test = function test(d) {\n    var i = d / Math.pow(base, Math.round(Math.log(d) / logb));\n    if (i * base < base - 0.5) i *= base;\n    return i <= k;\n  };\n  return values ? ticks.filter(test) : test;\n}\nvar symbols = (_symbols = {}, _defineProperty(_symbols, Quantile, 'quantiles'), _defineProperty(_symbols, Quantize, 'thresholds'), _defineProperty(_symbols, Threshold, 'domain'), _symbols);\nvar formats = (_formats = {}, _defineProperty(_formats, Quantile, 'quantiles'), _defineProperty(_formats, Quantize, 'domain'), _formats);\nfunction labelValues(scale, count) {\n  return scale.bins ? binValues(scale.bins) : scale.type === Log ? tickLog(scale, count, true) : symbols[scale.type] ? thresholdValues(scale[symbols[scale.type]]()) : tickValues(scale, count);\n}\nfunction thresholdFormat(locale, scale, specifier) {\n  var _ = scale[formats[scale.type]](),\n    n = _.length;\n  var d = n > 1 ? _[1] - _[0] : _[0],\n    i;\n  for (i = 1; i < n; ++i) {\n    d = Math.min(d, _[i] - _[i - 1]);\n  } // tickCount = 3 ticks times 10 for increased resolution\n\n  return locale.formatSpan(0, d, 3 * 10, specifier);\n}\nfunction thresholdValues(thresholds) {\n  var values = [-Infinity].concat(thresholds);\n  values.max = +Infinity;\n  return values;\n}\nfunction binValues(bins) {\n  var values = bins.slice(0, -1);\n  values.max = peek(bins);\n  return values;\n}\nvar isDiscreteRange = function isDiscreteRange(scale) {\n  return symbols[scale.type] || scale.bins;\n};\nfunction labelFormat(locale, scale, count, type, specifier, formatType, noSkip) {\n  var format = formats[scale.type] && formatType !== Time && formatType !== UTC ? thresholdFormat(locale, scale, specifier) : tickFormat(locale, scale, count, specifier, formatType, noSkip);\n  return type === SymbolLegend && isDiscreteRange(scale) ? formatRange(format) : type === DiscreteLegend ? formatDiscrete(format) : formatPoint(format);\n}\nvar formatRange = function formatRange(format) {\n  return function (value, index, array) {\n    var limit = get(array[index + 1], get(array.max, +Infinity)),\n      lo = formatValue(value, format),\n      hi = formatValue(limit, format);\n    return lo && hi ? lo + \" \\u2013 \" + hi : hi ? '< ' + hi : \"\\u2265 \" + lo;\n  };\n};\nvar get = function get(value, dflt) {\n  return value != null ? value : dflt;\n};\nvar formatDiscrete = function formatDiscrete(format) {\n  return function (value, index) {\n    return index ? format(value) : null;\n  };\n};\nvar formatPoint = function formatPoint(format) {\n  return function (value) {\n    return format(value);\n  };\n};\nvar formatValue = function formatValue(value, format) {\n  return Number.isFinite(value) ? format(value) : null;\n};\nfunction labelFraction(scale) {\n  var domain = scale.domain(),\n    count = domain.length - 1;\n  var lo = +domain[0],\n    hi = +peek(domain),\n    span = hi - lo;\n  if (scale.type === Threshold) {\n    var adjust = count ? span / count : 0.1;\n    lo -= adjust;\n    hi += adjust;\n    span = hi - lo;\n  }\n  return function (value) {\n    return (value - lo) / span;\n  };\n}\nfunction format(locale, scale, specifier, formatType) {\n  var type = formatType || scale.type; // replace abbreviated time specifiers to improve screen reader experience\n\n  if (isString(specifier) && isTemporal(type)) {\n    specifier = specifier.replace(/%a/g, '%A').replace(/%b/g, '%B');\n  }\n  return !specifier && type === Time ? locale.timeFormat('%A, %d %B %Y, %X') : !specifier && type === UTC ? locale.utcFormat('%A, %d %B %Y, %X UTC') : labelFormat(locale, scale, 5, null, specifier, formatType, true);\n}\nfunction domainCaption(locale, scale, opt) {\n  opt = opt || {};\n  var max = Math.max(3, opt.maxlen || 7),\n    fmt = format(locale, scale, opt.format, opt.formatType); // if scale breaks domain into bins, describe boundaries\n\n  if (isDiscretizing(scale.type)) {\n    var v = labelValues(scale).slice(1).map(fmt),\n      n = v.length;\n    return \"\".concat(n, \" boundar\").concat(n === 1 ? 'y' : 'ies', \": \").concat(v.join(', '));\n  } // if scale domain is discrete, list values\n  else if (isDiscrete(scale.type)) {\n    var d = scale.domain(),\n      _n = d.length,\n      _v = _n > max ? d.slice(0, max - 2).map(fmt).join(', ') + ', ending with ' + d.slice(-1).map(fmt) : d.map(fmt).join(', ');\n    return \"\".concat(_n, \" value\").concat(_n === 1 ? '' : 's', \": \").concat(_v);\n  } // if scale domain is continuous, describe value range\n  else {\n    var _d = scale.domain();\n    return \"values from \".concat(fmt(_d[0]), \" to \").concat(fmt(peek(_d)));\n  }\n}\nexport { Band, BinOrdinal, DiscreteLegend, Diverging, GradientLegend, Identity, Linear, Log, Ordinal, Point, Pow, Quantile, Quantize, Sequential, Sqrt, SymbolLegend, Symlog, Threshold, Time, UTC, bandSpace, domainCaption, interpolate, interpolateColors, interpolateRange, isContinuous, isDiscrete, isDiscretizing, isInterpolating, isLogarithmic, isQuantile, isTemporal, isValidScaleType, labelFormat, labelFraction, labelValues, quantizeInterpolator, scale, scaleCopy, scaleFraction, scheme, tickCount, tickFormat, tickValues, validTicks };","map":{"version":3,"names":["toNumber","peek","hasOwnProperty","toSet","array","constant","isNumber","span","isObject","isString","error","isArray","bisectRight","range","bisect","$","scaleOrdinal","tickFormat","tickFormat$1","scaleImplicit","$$1","timeInterval","utcInterval","bandSpace","count","paddingInner","paddingOuter","space","Identity","Linear","Log","Pow","Sqrt","Symlog","Time","UTC","Sequential","Diverging","Quantile","Quantize","Threshold","Ordinal","Point","Band","BinOrdinal","Continuous","Discrete","Discretizing","Interpolating","Temporal","invertRange","scale","_","lo","hi","t","invert","invertRangeExtent","min","max","i","n","length","undefined","invertExtent","band","unknown","domain","ordinalRange","range$1","step","bandwidth","round","align","rescale","reverse","stop","start","Math","floor","values","map","arguments","slice","rangeRound","padding","a","b","value","copy","pointish","point","Array","prototype","numbers","call","scaleBinOrdinal","x","specifier","scales","create","type","constructor","metadata","ctr","s","isValidScaleType","scaleIdentity","scaleLinear","scaleLog","scalePow","scaleSqrt","scaleSymlog","scaleTime","scaleUtc","scaleSequential","concat","scaleSequentialLog","scaleSequentialPow","scaleSequentialSqrt","scaleSequentialSymlog","scaleDiverging","scaleDivergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","scaleQuantile","scaleQuantize","scaleThreshold","hasType","key","isContinuous","isDiscrete","isDiscretizing","isLogarithmic","isTemporal","isInterpolating","isQuantile","scaleProps","interpolateRange","interpolator","interpolateColors","colors","gamma","piecewise","interpolate","quantizeInterpolator","samples","scaleCopy","scaleFraction","scale$1","delta","Number","isFinite","indexOf","forEach","m","interp","method","toLowerCase","split","toUpperCase","join","continuous","blues","greens","greys","oranges","purples","reds","blueGreen","bluePurple","greenBlue","orangeRed","purpleBlue","purpleBlueGreen","purpleRed","redPurple","yellowGreen","yellowOrangeBrown","yellowOrangeRed","blueOrange","brownBlueGreen","purpleGreen","purpleOrange","redBlue","redGrey","yellowGreenBlue","redYellowBlue","redYellowGreen","pinkYellowGreen","spectral","viridis","magma","inferno","plasma","cividis","rainbow","sinebow","turbo","browns","tealBlues","teals","warmGreys","goldGreen","goldOrange","goldRed","lightGreyRed","lightGreyTeal","lightMulti","lightOrange","lightTealBlue","darkBlue","darkGold","darkGreen","darkMulti","darkRed","discrete","category10","category20","category20b","category20c","tableau10","tableau20","accent","dark2","paired","pastel1","pastel2","set1","set2","set3","palette","c","apply","f","k","scheme","schemes","name","SymbolLegend","DiscreteLegend","GradientLegend","defaultFormatter","v","String","ascending","descending","tickCount","minStep","bins","interval","every","validTicks","ticks","cmp","ceil","filter","sort","endpoints","tickValues","locale","formatType","noSkip","format","timeFormat","utcFormat","varfmt","formatFloat","test","tickLog","d","formatSpan","base","logb","log","pow","symbols","formats","labelValues","binValues","thresholdValues","thresholdFormat","thresholds","Infinity","isDiscreteRange","labelFormat","formatRange","formatDiscrete","formatPoint","index","limit","get","formatValue","dflt","labelFraction","adjust","replace","domainCaption","opt","maxlen","fmt"],"sources":["/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/vega-scale/build/vega-scale.module.js"],"sourcesContent":["import { toNumber, peek, hasOwnProperty, toSet, array, constant, isNumber, span, isObject, isString, error, isArray } from 'vega-util';\nimport { bisectRight, range, bisect } from 'd3-array';\nimport * as $ from 'd3-scale';\nimport { scaleOrdinal, tickFormat as tickFormat$1 } from 'd3-scale';\nexport { scaleImplicit } from 'd3-scale';\nimport * as $$1 from 'd3-interpolate';\nimport { timeInterval, utcInterval } from 'vega-time';\n\nfunction bandSpace (count, paddingInner, paddingOuter) {\n  const space = count - paddingInner + paddingOuter * 2;\n  return count ? space > 0 ? space : 1 : 0;\n}\n\nconst Identity = 'identity';\nconst Linear = 'linear';\nconst Log = 'log';\nconst Pow = 'pow';\nconst Sqrt = 'sqrt';\nconst Symlog = 'symlog';\nconst Time = 'time';\nconst UTC = 'utc';\nconst Sequential = 'sequential';\nconst Diverging = 'diverging';\nconst Quantile = 'quantile';\nconst Quantize = 'quantize';\nconst Threshold = 'threshold';\nconst Ordinal = 'ordinal';\nconst Point = 'point';\nconst Band = 'band';\nconst BinOrdinal = 'bin-ordinal'; // categories\n\nconst Continuous = 'continuous';\nconst Discrete = 'discrete';\nconst Discretizing = 'discretizing';\nconst Interpolating = 'interpolating';\nconst Temporal = 'temporal';\n\nfunction invertRange (scale) {\n  return function (_) {\n    let lo = _[0],\n        hi = _[1],\n        t;\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    return [scale.invert(lo), scale.invert(hi)];\n  };\n}\n\nfunction invertRangeExtent (scale) {\n  return function (_) {\n    const range = scale.range();\n    let lo = _[0],\n        hi = _[1],\n        min = -1,\n        max,\n        t,\n        i,\n        n;\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    for (i = 0, n = range.length; i < n; ++i) {\n      if (range[i] >= lo && range[i] <= hi) {\n        if (min < 0) min = i;\n        max = i;\n      }\n    }\n\n    if (min < 0) return undefined;\n    lo = scale.invertExtent(range[min]);\n    hi = scale.invertExtent(range[max]);\n    return [lo[0] === undefined ? lo[1] : lo[0], hi[1] === undefined ? hi[0] : hi[1]];\n  };\n}\n\nfunction band() {\n  const scale = scaleOrdinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range;\n  let range$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n  delete scale.unknown;\n\n  function rescale() {\n    const n = domain().length,\n          reverse = range$1[1] < range$1[0],\n          stop = range$1[1 - reverse],\n          space = bandSpace(n, paddingInner, paddingOuter);\n    let start = range$1[reverse - 0];\n    step = (stop - start) / (space || 1);\n\n    if (round) {\n      step = Math.floor(step);\n    }\n\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n\n    if (round) {\n      start = Math.round(start);\n      bandwidth = Math.round(bandwidth);\n    }\n\n    const values = range(n).map(i => start + step * i);\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain(_);\n      return rescale();\n    } else {\n      return domain();\n    }\n  };\n\n  scale.range = function (_) {\n    if (arguments.length) {\n      range$1 = [+_[0], +_[1]];\n      return rescale();\n    } else {\n      return range$1.slice();\n    }\n  };\n\n  scale.rangeRound = function (_) {\n    range$1 = [+_[0], +_[1]];\n    round = true;\n    return rescale();\n  };\n\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n\n  scale.step = function () {\n    return step;\n  };\n\n  scale.round = function (_) {\n    if (arguments.length) {\n      round = !!_;\n      return rescale();\n    } else {\n      return round;\n    }\n  };\n\n  scale.padding = function (_) {\n    if (arguments.length) {\n      paddingOuter = Math.max(0, Math.min(1, _));\n      paddingInner = paddingOuter;\n      return rescale();\n    } else {\n      return paddingInner;\n    }\n  };\n\n  scale.paddingInner = function (_) {\n    if (arguments.length) {\n      paddingInner = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return paddingInner;\n    }\n  };\n\n  scale.paddingOuter = function (_) {\n    if (arguments.length) {\n      paddingOuter = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return paddingOuter;\n    }\n  };\n\n  scale.align = function (_) {\n    if (arguments.length) {\n      align = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return align;\n    }\n  };\n\n  scale.invertRange = function (_) {\n    // bail if range has null or undefined values\n    if (_[0] == null || _[1] == null) return;\n    const reverse = range$1[1] < range$1[0],\n          values = reverse ? ordinalRange().reverse() : ordinalRange(),\n          n = values.length - 1;\n    let lo = +_[0],\n        hi = +_[1],\n        a,\n        b,\n        t; // bail if either range endpoint is invalid\n\n    if (lo !== lo || hi !== hi) return; // order range inputs, bail if outside of scale range\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    if (hi < values[0] || lo > range$1[1 - reverse]) return; // binary search to index into scale range\n\n    a = Math.max(0, bisectRight(values, lo) - 1);\n    b = lo === hi ? a : bisectRight(values, hi) - 1; // increment index a if lo is within padding gap\n\n    if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) {\n      // map + swap\n      t = a;\n      a = n - b;\n      b = n - t;\n    }\n\n    return a > b ? undefined : domain().slice(a, b + 1);\n  };\n\n  scale.invert = function (_) {\n    const value = scale.invertRange([_, _]);\n    return value ? value[0] : value;\n  };\n\n  scale.copy = function () {\n    return band().domain(domain()).range(range$1).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  const copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n\n  scale.copy = function () {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar map = Array.prototype.map;\nfunction numbers(_) {\n  return map.call(_, toNumber);\n}\n\nconst slice = Array.prototype.slice;\n\nfunction scaleBinOrdinal() {\n  let domain = [],\n      range = [];\n\n  function scale(x) {\n    return x == null || x !== x ? undefined : range[(bisect(domain, x) - 1) % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain = numbers(_);\n      return scale;\n    } else {\n      return domain.slice();\n    }\n  };\n\n  scale.range = function (_) {\n    if (arguments.length) {\n      range = slice.call(_);\n      return scale;\n    } else {\n      return range.slice();\n    }\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat$1(domain[0], peek(domain), count == null ? 10 : count, specifier);\n  };\n\n  scale.copy = function () {\n    return scaleBinOrdinal().domain(scale.domain()).range(scale.range());\n  };\n\n  return scale;\n}\n\nconst scales = {};\n/**\n * Augment scales with their type and needed inverse methods.\n */\n\nfunction create(type, constructor, metadata) {\n  const ctr = function scale() {\n    const s = constructor();\n\n    if (!s.invertRange) {\n      s.invertRange = s.invert ? invertRange(s) : s.invertExtent ? invertRangeExtent(s) : undefined;\n    }\n\n    s.type = type;\n    return s;\n  };\n\n  ctr.metadata = toSet(array(metadata));\n  return ctr;\n}\n\nfunction scale(type, scale, metadata) {\n  if (arguments.length > 1) {\n    scales[type] = create(type, scale, metadata);\n    return this;\n  } else {\n    return isValidScaleType(type) ? scales[type] : undefined;\n  }\n} // identity scale\n\nscale(Identity, $.scaleIdentity); // continuous scales\n\nscale(Linear, $.scaleLinear, Continuous);\nscale(Log, $.scaleLog, [Continuous, Log]);\nscale(Pow, $.scalePow, Continuous);\nscale(Sqrt, $.scaleSqrt, Continuous);\nscale(Symlog, $.scaleSymlog, Continuous);\nscale(Time, $.scaleTime, [Continuous, Temporal]);\nscale(UTC, $.scaleUtc, [Continuous, Temporal]); // sequential scales\n\nscale(Sequential, $.scaleSequential, [Continuous, Interpolating]); // backwards compat\n\nscale(\"\".concat(Sequential, \"-\").concat(Linear), $.scaleSequential, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Log), $.scaleSequentialLog, [Continuous, Interpolating, Log]);\nscale(\"\".concat(Sequential, \"-\").concat(Pow), $.scaleSequentialPow, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Sqrt), $.scaleSequentialSqrt, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Symlog), $.scaleSequentialSymlog, [Continuous, Interpolating]); // diverging scales\n\nscale(\"\".concat(Diverging, \"-\").concat(Linear), $.scaleDiverging, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Log), $.scaleDivergingLog, [Continuous, Interpolating, Log]);\nscale(\"\".concat(Diverging, \"-\").concat(Pow), $.scaleDivergingPow, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Sqrt), $.scaleDivergingSqrt, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Symlog), $.scaleDivergingSymlog, [Continuous, Interpolating]); // discretizing scales\n\nscale(Quantile, $.scaleQuantile, [Discretizing, Quantile]);\nscale(Quantize, $.scaleQuantize, Discretizing);\nscale(Threshold, $.scaleThreshold, Discretizing); // discrete scales\n\nscale(BinOrdinal, scaleBinOrdinal, [Discrete, Discretizing]);\nscale(Ordinal, $.scaleOrdinal, Discrete);\nscale(Band, band, Discrete);\nscale(Point, point, Discrete);\nfunction isValidScaleType(type) {\n  return hasOwnProperty(scales, type);\n}\n\nfunction hasType(key, type) {\n  const s = scales[key];\n  return s && s.metadata[type];\n}\n\nfunction isContinuous(key) {\n  return hasType(key, Continuous);\n}\nfunction isDiscrete(key) {\n  return hasType(key, Discrete);\n}\nfunction isDiscretizing(key) {\n  return hasType(key, Discretizing);\n}\nfunction isLogarithmic(key) {\n  return hasType(key, Log);\n}\nfunction isTemporal(key) {\n  return hasType(key, Temporal);\n}\nfunction isInterpolating(key) {\n  return hasType(key, Interpolating);\n}\nfunction isQuantile(key) {\n  return hasType(key, Quantile);\n}\n\nconst scaleProps = ['clamp', 'base', 'constant', 'exponent'];\nfunction interpolateRange(interpolator, range) {\n  const start = range[0],\n        span = peek(range) - start;\n  return function (i) {\n    return interpolator(start + i * span);\n  };\n}\nfunction interpolateColors(colors, type, gamma) {\n  return $$1.piecewise(interpolate(type || 'rgb', gamma), colors);\n}\nfunction quantizeInterpolator(interpolator, count) {\n  const samples = new Array(count),\n        n = count + 1;\n\n  for (let i = 0; i < count;) samples[i] = interpolator(++i / n);\n\n  return samples;\n}\nfunction scaleCopy(scale) {\n  const t = scale.type,\n        s = scale.copy();\n  s.type = t;\n  return s;\n}\nfunction scaleFraction(scale$1, min, max) {\n  const delta = max - min;\n  let i, t, s;\n\n  if (!delta || !Number.isFinite(delta)) {\n    return constant(0.5);\n  } else {\n    i = (t = scale$1.type).indexOf('-');\n    t = i < 0 ? t : t.slice(i + 1);\n    s = scale(t)().domain([min, max]).range([0, 1]);\n    scaleProps.forEach(m => scale$1[m] ? s[m](scale$1[m]()) : 0);\n    return s;\n  }\n}\nfunction interpolate(type, gamma) {\n  const interp = $$1[method(type)];\n  return gamma != null && interp && interp.gamma ? interp.gamma(gamma) : interp;\n}\n\nfunction method(type) {\n  return 'interpolate' + type.toLowerCase().split('-').map(s => s[0].toUpperCase() + s.slice(1)).join('');\n}\n\nconst continuous = {\n  blues: 'cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90',\n  greens: 'd3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429',\n  greys: 'e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e',\n  oranges: 'fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303',\n  purples: 'e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c',\n  reds: 'fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13',\n  blueGreen: 'd5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429',\n  bluePurple: 'ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71',\n  greenBlue: 'd3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1',\n  orangeRed: 'fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403',\n  purpleBlue: 'dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281',\n  purpleBlueGreen: 'dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353',\n  purpleRed: 'dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a',\n  redPurple: 'fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174',\n  yellowGreen: 'e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034',\n  yellowOrangeBrown: 'feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204',\n  yellowOrangeRed: 'fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225',\n  blueOrange: '134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07',\n  brownBlueGreen: '704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147',\n  purpleGreen: '5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29',\n  purpleOrange: '4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07',\n  redBlue: '8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85',\n  redGrey: '8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434',\n  yellowGreenBlue: 'eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185',\n  redYellowBlue: 'a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695',\n  redYellowGreen: 'a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837',\n  pinkYellowGreen: '8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419',\n  spectral: '9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2',\n  viridis: '440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725',\n  magma: '0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf',\n  inferno: '0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4',\n  plasma: '0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921',\n  cividis: '00205100235800265d002961012b65042e670831690d346b11366c16396d1c3c6e213f6e26426e2c456e31476e374a6e3c4d6e42506e47536d4c566d51586e555b6e5a5e6e5e616e62646f66676f6a6a706e6d717270717573727976737c79747f7c75827f758682768985778c8877908b78938e789691789a94789e9778a19b78a59e77a9a177aea575b2a874b6ab73bbaf71c0b26fc5b66dc9b96acebd68d3c065d8c462ddc85fe2cb5ce7cf58ebd355f0d652f3da4ff7de4cfae249fce647',\n  rainbow: '6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa',\n  sinebow: 'ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040',\n  turbo: '23171b32204a3e2a71453493493eae4b49c54a53d7485ee44569ee4074f53c7ff8378af93295f72e9ff42ba9ef28b3e926bce125c5d925cdcf27d5c629dcbc2de3b232e9a738ee9d3ff39347f68950f9805afc7765fd6e70fe667cfd5e88fc5795fb51a1f84badf545b9f140c5ec3cd0e637dae034e4d931ecd12ef4c92bfac029ffb626ffad24ffa223ff9821ff8d1fff821dff771cfd6c1af76118f05616e84b14df4111d5380fcb2f0dc0260ab61f07ac1805a313029b0f00950c00910b00',\n  browns: 'eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632',\n  tealBlues: 'bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985',\n  teals: 'bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667',\n  warmGreys: 'dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e',\n  goldGreen: 'f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36',\n  goldOrange: 'f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26',\n  goldRed: 'f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e',\n  lightGreyRed: 'efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b',\n  lightGreyTeal: 'e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc',\n  lightMulti: 'e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c',\n  lightOrange: 'f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b',\n  lightTealBlue: 'e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988',\n  darkBlue: '3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff',\n  darkGold: '3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff',\n  darkGreen: '3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa',\n  darkMulti: '3737371f5287197d8c29a86995ce3fffe800ffffff',\n  darkRed: '3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c'\n};\nconst discrete = {\n  category10: '1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf',\n  category20: '1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5',\n  category20b: '393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6',\n  category20c: '3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9',\n  tableau10: '4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac',\n  tableau20: '4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5',\n  accent: '7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666',\n  dark2: '1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666',\n  paired: 'a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928',\n  pastel1: 'fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2',\n  pastel2: 'b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc',\n  set1: 'e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999',\n  set2: '66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3',\n  set3: '8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f'\n};\n\nfunction colors(palette) {\n  const n = palette.length / 6 | 0,\n        c = new Array(n);\n\n  for (let i = 0; i < n;) {\n    c[i] = '#' + palette.slice(i * 6, ++i * 6);\n  }\n\n  return c;\n}\n\nfunction apply(_, f) {\n  for (const k in _) scheme(k, f(_[k]));\n}\n\nconst schemes = {};\napply(discrete, colors);\napply(continuous, _ => interpolateColors(colors(_)));\nfunction scheme(name, scheme) {\n  name = name && name.toLowerCase();\n\n  if (arguments.length > 1) {\n    schemes[name] = scheme;\n    return this;\n  } else {\n    return schemes[name];\n  }\n}\n\nconst SymbolLegend = 'symbol';\nconst DiscreteLegend = 'discrete';\nconst GradientLegend = 'gradient';\n\nconst defaultFormatter = value => isArray(value) ? value.map(v => String(v)) : String(value);\n\nconst ascending = (a, b) => a[1] - b[1];\n\nconst descending = (a, b) => b[1] - a[1];\n/**\n * Determine the tick count or interval function.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {*} count - The desired tick count or interval specifier.\n * @param {number} minStep - The desired minimum step between tick values.\n * @return {*} - The tick count or interval function.\n */\n\n\nfunction tickCount(scale, count, minStep) {\n  let step;\n\n  if (isNumber(count)) {\n    if (scale.bins) {\n      count = Math.max(count, scale.bins.length);\n    }\n\n    if (minStep != null) {\n      count = Math.min(count, Math.floor(span(scale.domain()) / minStep || 1));\n    }\n  }\n\n  if (isObject(count)) {\n    step = count.step;\n    count = count.interval;\n  }\n\n  if (isString(count)) {\n    count = scale.type === Time ? timeInterval(count) : scale.type == UTC ? utcInterval(count) : error('Only time and utc scales accept interval strings.');\n    if (step) count = count.every(step);\n  }\n\n  return count;\n}\n/**\n * Filter a set of candidate tick values, ensuring that only tick values\n * that lie within the scale range are included.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {Array<*>} ticks - The candidate tick values.\n * @param {*} count - The tick count or interval function.\n * @return {Array<*>} - The filtered tick values.\n */\n\nfunction validTicks(scale, ticks, count) {\n  let range = scale.range(),\n      lo = range[0],\n      hi = peek(range),\n      cmp = ascending;\n\n  if (lo > hi) {\n    range = hi;\n    hi = lo;\n    lo = range;\n    cmp = descending;\n  }\n\n  lo = Math.floor(lo);\n  hi = Math.ceil(hi); // filter ticks to valid values within the range\n  // additionally sort ticks in range order (#2579)\n\n  ticks = ticks.map(v => [v, scale(v)]).filter(_ => lo <= _[1] && _[1] <= hi).sort(cmp).map(_ => _[0]);\n\n  if (count > 0 && ticks.length > 1) {\n    const endpoints = [ticks[0], peek(ticks)];\n\n    while (ticks.length > count && ticks.length >= 3) {\n      ticks = ticks.filter((_, i) => !(i % 2));\n    }\n\n    if (ticks.length < 3) {\n      ticks = endpoints;\n    }\n  }\n\n  return ticks;\n}\n/**\n * Generate tick values for the given scale and approximate tick count or\n * interval value. If the scale has a 'ticks' method, it will be used to\n * generate the ticks, with the count argument passed as a parameter. If the\n * scale lacks a 'ticks' method, the full scale domain will be returned.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {*} [count] - The approximate number of desired ticks.\n * @return {Array<*>} - The generated tick values.\n */\n\nfunction tickValues(scale, count) {\n  return scale.bins ? validTicks(scale, scale.bins) : scale.ticks ? scale.ticks(count) : scale.domain();\n}\n/**\n * Generate a label format function for a scale. If the scale has a\n * 'tickFormat' method, it will be used to generate the formatter, with the\n * count and specifier arguments passed as parameters. If the scale lacks a\n * 'tickFormat' method, the returned formatter performs simple string coercion.\n * If the input scale is a logarithmic scale and the format specifier does not\n * indicate a desired decimal precision, a special variable precision formatter\n * that automatically trims trailing zeroes will be generated.\n * @param {Scale} scale - The scale for which to generate the label formatter.\n * @param {*} [count] - The approximate number of desired ticks.\n * @param {string} [specifier] - The format specifier. Must be a legal d3\n *   specifier string (see https://github.com/d3/d3-format#formatSpecifier) or\n *   time multi-format specifier object.\n * @return {function(*):string} - The generated label formatter.\n */\n\nfunction tickFormat(locale, scale, count, specifier, formatType, noSkip) {\n  const type = scale.type;\n  let format = defaultFormatter;\n\n  if (type === Time || formatType === Time) {\n    format = locale.timeFormat(specifier);\n  } else if (type === UTC || formatType === UTC) {\n    format = locale.utcFormat(specifier);\n  } else if (isLogarithmic(type)) {\n    const varfmt = locale.formatFloat(specifier);\n\n    if (noSkip || scale.bins) {\n      format = varfmt;\n    } else {\n      const test = tickLog(scale, count, false);\n\n      format = _ => test(_) ? varfmt(_) : '';\n    }\n  } else if (scale.tickFormat) {\n    // if d3 scale has tickFormat, it must be continuous\n    const d = scale.domain();\n    format = locale.formatSpan(d[0], d[d.length - 1], count, specifier);\n  } else if (specifier) {\n    format = locale.format(specifier);\n  }\n\n  return format;\n}\nfunction tickLog(scale, count, values) {\n  const ticks = tickValues(scale, count),\n        base = scale.base(),\n        logb = Math.log(base),\n        k = Math.max(1, base * count / ticks.length); // apply d3-scale's log format filter criteria\n\n  const test = d => {\n    let i = d / Math.pow(base, Math.round(Math.log(d) / logb));\n    if (i * base < base - 0.5) i *= base;\n    return i <= k;\n  };\n\n  return values ? ticks.filter(test) : test;\n}\n\nconst symbols = {\n  [Quantile]: 'quantiles',\n  [Quantize]: 'thresholds',\n  [Threshold]: 'domain'\n};\nconst formats = {\n  [Quantile]: 'quantiles',\n  [Quantize]: 'domain'\n};\nfunction labelValues(scale, count) {\n  return scale.bins ? binValues(scale.bins) : scale.type === Log ? tickLog(scale, count, true) : symbols[scale.type] ? thresholdValues(scale[symbols[scale.type]]()) : tickValues(scale, count);\n}\nfunction thresholdFormat(locale, scale, specifier) {\n  const _ = scale[formats[scale.type]](),\n        n = _.length;\n\n  let d = n > 1 ? _[1] - _[0] : _[0],\n      i;\n\n  for (i = 1; i < n; ++i) {\n    d = Math.min(d, _[i] - _[i - 1]);\n  } // tickCount = 3 ticks times 10 for increased resolution\n\n\n  return locale.formatSpan(0, d, 3 * 10, specifier);\n}\n\nfunction thresholdValues(thresholds) {\n  const values = [-Infinity].concat(thresholds);\n  values.max = +Infinity;\n  return values;\n}\n\nfunction binValues(bins) {\n  const values = bins.slice(0, -1);\n  values.max = peek(bins);\n  return values;\n}\n\nconst isDiscreteRange = scale => symbols[scale.type] || scale.bins;\n\nfunction labelFormat(locale, scale, count, type, specifier, formatType, noSkip) {\n  const format = formats[scale.type] && formatType !== Time && formatType !== UTC ? thresholdFormat(locale, scale, specifier) : tickFormat(locale, scale, count, specifier, formatType, noSkip);\n  return type === SymbolLegend && isDiscreteRange(scale) ? formatRange(format) : type === DiscreteLegend ? formatDiscrete(format) : formatPoint(format);\n}\n\nconst formatRange = format => (value, index, array) => {\n  const limit = get(array[index + 1], get(array.max, +Infinity)),\n        lo = formatValue(value, format),\n        hi = formatValue(limit, format);\n  return lo && hi ? lo + ' \\u2013 ' + hi : hi ? '< ' + hi : '\\u2265 ' + lo;\n};\n\nconst get = (value, dflt) => value != null ? value : dflt;\n\nconst formatDiscrete = format => (value, index) => index ? format(value) : null;\n\nconst formatPoint = format => value => format(value);\n\nconst formatValue = (value, format) => Number.isFinite(value) ? format(value) : null;\n\nfunction labelFraction(scale) {\n  const domain = scale.domain(),\n        count = domain.length - 1;\n  let lo = +domain[0],\n      hi = +peek(domain),\n      span = hi - lo;\n\n  if (scale.type === Threshold) {\n    const adjust = count ? span / count : 0.1;\n    lo -= adjust;\n    hi += adjust;\n    span = hi - lo;\n  }\n\n  return value => (value - lo) / span;\n}\n\nfunction format(locale, scale, specifier, formatType) {\n  const type = formatType || scale.type; // replace abbreviated time specifiers to improve screen reader experience\n\n  if (isString(specifier) && isTemporal(type)) {\n    specifier = specifier.replace(/%a/g, '%A').replace(/%b/g, '%B');\n  }\n\n  return !specifier && type === Time ? locale.timeFormat('%A, %d %B %Y, %X') : !specifier && type === UTC ? locale.utcFormat('%A, %d %B %Y, %X UTC') : labelFormat(locale, scale, 5, null, specifier, formatType, true);\n}\n\nfunction domainCaption(locale, scale, opt) {\n  opt = opt || {};\n  const max = Math.max(3, opt.maxlen || 7),\n        fmt = format(locale, scale, opt.format, opt.formatType); // if scale breaks domain into bins, describe boundaries\n\n  if (isDiscretizing(scale.type)) {\n    const v = labelValues(scale).slice(1).map(fmt),\n          n = v.length;\n    return \"\".concat(n, \" boundar\").concat(n === 1 ? 'y' : 'ies', \": \").concat(v.join(', '));\n  } // if scale domain is discrete, list values\n  else if (isDiscrete(scale.type)) {\n    const d = scale.domain(),\n          n = d.length,\n          v = n > max ? d.slice(0, max - 2).map(fmt).join(', ') + ', ending with ' + d.slice(-1).map(fmt) : d.map(fmt).join(', ');\n    return \"\".concat(n, \" value\").concat(n === 1 ? '' : 's', \": \").concat(v);\n  } // if scale domain is continuous, describe value range\n  else {\n    const d = scale.domain();\n    return \"values from \".concat(fmt(d[0]), \" to \").concat(fmt(peek(d)));\n  }\n}\n\nexport { Band, BinOrdinal, DiscreteLegend, Diverging, GradientLegend, Identity, Linear, Log, Ordinal, Point, Pow, Quantile, Quantize, Sequential, Sqrt, SymbolLegend, Symlog, Threshold, Time, UTC, bandSpace, domainCaption, interpolate, interpolateColors, interpolateRange, isContinuous, isDiscrete, isDiscretizing, isInterpolating, isLogarithmic, isQuantile, isTemporal, isValidScaleType, labelFormat, labelFraction, labelValues, quantizeInterpolator, scale, scaleCopy, scaleFraction, scheme, tickCount, tickFormat, tickValues, validTicks };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}