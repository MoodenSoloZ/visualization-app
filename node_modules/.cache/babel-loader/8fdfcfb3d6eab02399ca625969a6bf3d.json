{"ast":null,"code":"import Observable from \"./observable\";\nimport Subject from \"./subject\";\nimport unsubscribe from \"./unsubscribe\";\n// TODO: Subject already creates additional observables \"under the hood\",\n//       now we introduce even more. A true native MulticastObservable\n//       would be preferable.\n/**\n * Takes a \"cold\" observable and returns a wrapping \"hot\" observable that\n * proxies the input observable's values and errors.\n *\n * An observable is called \"cold\" when its initialization function is run\n * for each new subscriber. This is how observable-fns's `Observable`\n * implementation works.\n *\n * A hot observable is an observable where new subscribers subscribe to\n * the upcoming values of an already-initialiazed observable.\n *\n * The multicast observable will lazily subscribe to the source observable\n * once it has its first own subscriber and will unsubscribe from the\n * source observable when its last own subscriber unsubscribed.\n */\nfunction multicast(coldObservable) {\n  var subject = new Subject();\n  var sourceSubscription;\n  var subscriberCount = 0;\n  return new Observable(function (observer) {\n    // Init source subscription lazily\n    if (!sourceSubscription) {\n      sourceSubscription = coldObservable.subscribe(subject);\n    }\n    // Pipe all events from `subject` into this observable\n    var subscription = subject.subscribe(observer);\n    subscriberCount++;\n    return function () {\n      subscriberCount--;\n      subscription.unsubscribe();\n      // Close source subscription once last subscriber has unsubscribed\n      if (subscriberCount === 0) {\n        unsubscribe(sourceSubscription);\n        sourceSubscription = undefined;\n      }\n    };\n  });\n}\nexport default multicast;","map":{"version":3,"names":["Observable","Subject","unsubscribe","multicast","coldObservable","subject","sourceSubscription","subscriberCount","observer","subscribe","subscription","undefined"],"sources":["/Users/weihangzhang/Documents/webpage/visualization-app-git/node_modules/observable-fns/dist.esm/multicast.js"],"sourcesContent":["import Observable from \"./observable\";\nimport Subject from \"./subject\";\nimport unsubscribe from \"./unsubscribe\";\n// TODO: Subject already creates additional observables \"under the hood\",\n//       now we introduce even more. A true native MulticastObservable\n//       would be preferable.\n/**\n * Takes a \"cold\" observable and returns a wrapping \"hot\" observable that\n * proxies the input observable's values and errors.\n *\n * An observable is called \"cold\" when its initialization function is run\n * for each new subscriber. This is how observable-fns's `Observable`\n * implementation works.\n *\n * A hot observable is an observable where new subscribers subscribe to\n * the upcoming values of an already-initialiazed observable.\n *\n * The multicast observable will lazily subscribe to the source observable\n * once it has its first own subscriber and will unsubscribe from the\n * source observable when its last own subscriber unsubscribed.\n */\nfunction multicast(coldObservable) {\n    const subject = new Subject();\n    let sourceSubscription;\n    let subscriberCount = 0;\n    return new Observable(observer => {\n        // Init source subscription lazily\n        if (!sourceSubscription) {\n            sourceSubscription = coldObservable.subscribe(subject);\n        }\n        // Pipe all events from `subject` into this observable\n        const subscription = subject.subscribe(observer);\n        subscriberCount++;\n        return () => {\n            subscriberCount--;\n            subscription.unsubscribe();\n            // Close source subscription once last subscriber has unsubscribed\n            if (subscriberCount === 0) {\n                unsubscribe(sourceSubscription);\n                sourceSubscription = undefined;\n            }\n        };\n    });\n}\nexport default multicast;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAAS,CAACC,cAAc,EAAE;EAC/B,IAAMC,OAAO,GAAG,IAAIJ,OAAO,EAAE;EAC7B,IAAIK,kBAAkB;EACtB,IAAIC,eAAe,GAAG,CAAC;EACvB,OAAO,IAAIP,UAAU,CAAC,UAAAQ,QAAQ,EAAI;IAC9B;IACA,IAAI,CAACF,kBAAkB,EAAE;MACrBA,kBAAkB,GAAGF,cAAc,CAACK,SAAS,CAACJ,OAAO,CAAC;IAC1D;IACA;IACA,IAAMK,YAAY,GAAGL,OAAO,CAACI,SAAS,CAACD,QAAQ,CAAC;IAChDD,eAAe,EAAE;IACjB,OAAO,YAAM;MACTA,eAAe,EAAE;MACjBG,YAAY,CAACR,WAAW,EAAE;MAC1B;MACA,IAAIK,eAAe,KAAK,CAAC,EAAE;QACvBL,WAAW,CAACI,kBAAkB,CAAC;QAC/BA,kBAAkB,GAAGK,SAAS;MAClC;IACJ,CAAC;EACL,CAAC,CAAC;AACN;AACA,eAAeR,SAAS"},"metadata":{},"sourceType":"module"}