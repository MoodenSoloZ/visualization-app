{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { contains, getFirstDefined } from '../../util';\n/**\n * Get header channel, which can be different from facet channel when orient is specified or when the facet channel is facet.\n */\nexport function getHeaderChannel(channel, orient) {\n  if (contains(['top', 'bottom'], orient)) {\n    return 'column';\n  } else if (contains(['left', 'right'], orient)) {\n    return 'row';\n  }\n  return channel === 'row' ? 'row' : 'column';\n}\nexport function getHeaderProperty(prop, header, config, channel) {\n  var headerSpecificConfig = channel === 'row' ? config.headerRow : channel === 'column' ? config.headerColumn : config.headerFacet;\n  return getFirstDefined((header || {})[prop], headerSpecificConfig[prop], config.header[prop]);\n}\nexport function getHeaderProperties(properties, header, config, channel) {\n  var props = {};\n  var _iterator = _createForOfIteratorHelper(properties),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var prop = _step.value;\n      var value = getHeaderProperty(prop, header || {}, config, channel);\n      if (value !== undefined) {\n        props[prop] = value;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return props;\n}","map":{"version":3,"sources":["../../../../src/compile/header/common.ts"],"names":[],"mappings":";AAIA,SAAQ,QAAQ,EAAE,eAAe,QAAO,YAAY;AAGpD;;AAEG;AACH,OAAM,SAAU,gBAAgB,CAAC,OAAqB,EAAE,MAAc,EAAA;EACpE,IAAI,QAAQ,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,MAAM,CAAC,EAAE;IACvC,OAAO,QAAQ;GAChB,MAAM,IAAI,QAAQ,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,MAAM,CAAC,EAAE;IAC9C,OAAO,KAAK;EACb;EACD,OAAO,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,QAAQ;AAC7C;AAEA,OAAM,SAAU,iBAAiB,CAC/B,IAAO,EACP,MAAyB,EACzB,MAAyB,EACzB,OAAqB,EAAA;EAErB,IAAM,oBAAoB,GACxB,OAAO,KAAK,KAAK,GAAG,MAAM,CAAC,SAAS,GAAG,OAAO,KAAK,QAAQ,GAAG,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW;EAExG,OAAO,eAAe,CAAC,CAAC,MAAM,IAAI,CAAA,CAAE,EAAE,IAAI,CAAC,EAAE,oBAAoB,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC/F;AAEA,OAAM,SAAU,mBAAmB,CACjC,UAAuC,EACvC,MAAyB,EACzB,MAAyB,EACzB,OAAqB,EAAA;EAErB,IAAM,KAAK,GAAG,CAAA,CAAE;EAAC,2CACE,UAAU;IAAA;EAAA;IAA7B,oDAA+B;MAAA,IAApB,IAAI;MACb,IAAM,KAAK,GAAG,iBAAiB,CAAC,IAAI,EAAE,MAAM,IAAI,CAAA,CAAE,EAAE,MAAM,EAAE,OAAO,CAAC;MACpE,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK;MACpB;;EACF;IAAA;EAAA;IAAA;EAAA;EACD,OAAO,KAAK;AACd","sourceRoot":"","sourcesContent":["import { contains, getFirstDefined } from '../../util';\n/**\n * Get header channel, which can be different from facet channel when orient is specified or when the facet channel is facet.\n */\nexport function getHeaderChannel(channel, orient) {\n    if (contains(['top', 'bottom'], orient)) {\n        return 'column';\n    }\n    else if (contains(['left', 'right'], orient)) {\n        return 'row';\n    }\n    return channel === 'row' ? 'row' : 'column';\n}\nexport function getHeaderProperty(prop, header, config, channel) {\n    const headerSpecificConfig = channel === 'row' ? config.headerRow : channel === 'column' ? config.headerColumn : config.headerFacet;\n    return getFirstDefined((header || {})[prop], headerSpecificConfig[prop], config.header[prop]);\n}\nexport function getHeaderProperties(properties, header, config, channel) {\n    const props = {};\n    for (const prop of properties) {\n        const value = getHeaderProperty(prop, header || {}, config, channel);\n        if (value !== undefined) {\n            props[prop] = value;\n        }\n    }\n    return props;\n}\n//# sourceMappingURL=common.js.map"]},"metadata":{},"sourceType":"module"}