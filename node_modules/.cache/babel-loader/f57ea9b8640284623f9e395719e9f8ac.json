{"ast":null,"code":"import * as encode from './encode';\nfunction _encodeEntry(model, fixedShape) {\n  var config = model.config;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n    align: 'ignore',\n    baseline: 'ignore',\n    color: 'include',\n    size: 'include',\n    orient: 'ignore',\n    theta: 'ignore'\n  })), encode.pointPosition('x', model, {\n    defaultPos: 'mid'\n  })), encode.pointPosition('y', model, {\n    defaultPos: 'mid'\n  })), encode.nonPosition('size', model)), encode.nonPosition('angle', model)), shapeMixins(model, config, fixedShape));\n}\nexport function shapeMixins(model, config, fixedShape) {\n  if (fixedShape) {\n    return {\n      shape: {\n        value: fixedShape\n      }\n    };\n  }\n  return encode.nonPosition('shape', model);\n}\nexport var point = {\n  vgMark: 'symbol',\n  encodeEntry: function encodeEntry(model) {\n    return _encodeEntry(model);\n  }\n};\nexport var circle = {\n  vgMark: 'symbol',\n  encodeEntry: function encodeEntry(model) {\n    return _encodeEntry(model, 'circle');\n  }\n};\nexport var square = {\n  vgMark: 'symbol',\n  encodeEntry: function encodeEntry(model) {\n    return _encodeEntry(model, 'square');\n  }\n};","map":{"version":3,"sources":["../../../../src/compile/mark/point.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,MAAM,MAAM,UAAU;AAElC,SAAS,YAAW,CAAC,KAAgB,EAAE,UAAgC,EAAA;EACrE,IAAO,MAAM,GAAI,KAAK,CAAf,MAAM;EAEb,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACK,MAAM,CAAC,eAAe,CAAC,KAAK,EAAE;IAC/B,KAAK,EAAE,QAAQ;IACf,QAAQ,EAAE,QAAQ;IAClB,KAAK,EAAE,SAAS;IAChB,IAAI,EAAE,SAAS;IACf,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE;GACR,CAAC,CAAA,EACC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE;IAAC,UAAU,EAAE;EAAK,CAAC,CAAC,CAAA,EACrD,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,KAAK,EAAE;IAAC,UAAU,EAAE;EAAK,CAAC,CAAC,CAAA,EACrD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA,EACjC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA,EAClC,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;AAE7C;AAEA,OAAM,SAAU,WAAW,CAAC,KAAgB,EAAE,MAAc,EAAE,UAAgC,EAAA;EAC5F,IAAI,UAAU,EAAE;IACd,OAAO;MAAC,KAAK,EAAE;QAAC,KAAK,EAAE;MAAU;IAAC,CAAC;EACpC;EACD,OAAO,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC;AAC3C;AAEA,OAAO,IAAM,KAAK,GAAiB;EACjC,MAAM,EAAE,QAAQ;EAChB,WAAW,EAAE,qBAAC,KAAgB,EAAI;IAChC,OAAO,YAAW,CAAC,KAAK,CAAC;EAC3B;CACD;AAED,OAAO,IAAM,MAAM,GAAiB;EAClC,MAAM,EAAE,QAAQ;EAChB,WAAW,EAAE,qBAAC,KAAgB,EAAI;IAChC,OAAO,YAAW,CAAC,KAAK,EAAE,QAAQ,CAAC;EACrC;CACD;AAED,OAAO,IAAM,MAAM,GAAiB;EAClC,MAAM,EAAE,QAAQ;EAChB,WAAW,EAAE,qBAAC,KAAgB,EAAI;IAChC,OAAO,YAAW,CAAC,KAAK,EAAE,QAAQ,CAAC;EACrC;CACD","sourceRoot":"","sourcesContent":["import * as encode from './encode';\nfunction encodeEntry(model, fixedShape) {\n    const { config } = model;\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        size: 'include',\n        orient: 'ignore',\n        theta: 'ignore'\n    })), encode.pointPosition('x', model, { defaultPos: 'mid' })), encode.pointPosition('y', model, { defaultPos: 'mid' })), encode.nonPosition('size', model)), encode.nonPosition('angle', model)), shapeMixins(model, config, fixedShape));\n}\nexport function shapeMixins(model, config, fixedShape) {\n    if (fixedShape) {\n        return { shape: { value: fixedShape } };\n    }\n    return encode.nonPosition('shape', model);\n}\nexport const point = {\n    vgMark: 'symbol',\n    encodeEntry: (model) => {\n        return encodeEntry(model);\n    }\n};\nexport const circle = {\n    vgMark: 'symbol',\n    encodeEntry: (model) => {\n        return encodeEntry(model, 'circle');\n    }\n};\nexport const square = {\n    vgMark: 'symbol',\n    encodeEntry: (model) => {\n        return encodeEntry(model, 'square');\n    }\n};\n//# sourceMappingURL=point.js.map"]},"metadata":{},"sourceType":"module"}