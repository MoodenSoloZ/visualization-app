{"ast":null,"code":"import { Transform } from 'vega-dataflow';\nimport { inherits, array, isFunction, accessorFields, hasOwnProperty, error } from 'vega-util';\nimport { forceSimulation, forceCenter, forceCollide, forceManyBody, forceLink, forceX, forceY } from 'd3-force';\nvar ForceMap = {\n  center: forceCenter,\n  collide: forceCollide,\n  nbody: forceManyBody,\n  link: forceLink,\n  x: forceX,\n  y: forceY\n};\nvar Forces = 'forces',\n  ForceParams = ['alpha', 'alphaMin', 'alphaTarget', 'velocityDecay', 'forces'],\n  ForceConfig = ['static', 'iterations'],\n  ForceOutput = ['x', 'y', 'vx', 'vy'];\n/**\n * Force simulation layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<object>} params.forces - The forces to apply.\n */\n\nfunction Force(params) {\n  Transform.call(this, null, params);\n}\nForce.Definition = {\n  'type': 'Force',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'static',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'restart',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'iterations',\n    'type': 'number',\n    'default': 300\n  }, {\n    'name': 'alpha',\n    'type': 'number',\n    'default': 1\n  }, {\n    'name': 'alphaMin',\n    'type': 'number',\n    'default': 0.001\n  }, {\n    'name': 'alphaTarget',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'velocityDecay',\n    'type': 'number',\n    'default': 0.4\n  }, {\n    'name': 'forces',\n    'type': 'param',\n    'array': true,\n    'params': [{\n      'key': {\n        'force': 'center'\n      },\n      'params': [{\n        'name': 'x',\n        'type': 'number',\n        'default': 0\n      }, {\n        'name': 'y',\n        'type': 'number',\n        'default': 0\n      }]\n    }, {\n      'key': {\n        'force': 'collide'\n      },\n      'params': [{\n        'name': 'radius',\n        'type': 'number',\n        'expr': true\n      }, {\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.7\n      }, {\n        'name': 'iterations',\n        'type': 'number',\n        'default': 1\n      }]\n    }, {\n      'key': {\n        'force': 'nbody'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': -30\n      }, {\n        'name': 'theta',\n        'type': 'number',\n        'default': 0.9\n      }, {\n        'name': 'distanceMin',\n        'type': 'number',\n        'default': 1\n      }, {\n        'name': 'distanceMax',\n        'type': 'number'\n      }]\n    }, {\n      'key': {\n        'force': 'link'\n      },\n      'params': [{\n        'name': 'links',\n        'type': 'data'\n      }, {\n        'name': 'id',\n        'type': 'field'\n      }, {\n        'name': 'distance',\n        'type': 'number',\n        'default': 30,\n        'expr': true\n      }, {\n        'name': 'strength',\n        'type': 'number',\n        'expr': true\n      }, {\n        'name': 'iterations',\n        'type': 'number',\n        'default': 1\n      }]\n    }, {\n      'key': {\n        'force': 'x'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.1\n      }, {\n        'name': 'x',\n        'type': 'field'\n      }]\n    }, {\n      'key': {\n        'force': 'y'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.1\n      }, {\n        'name': 'y',\n        'type': 'field'\n      }]\n    }]\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'modify': false,\n    'default': ForceOutput\n  }]\n};\ninherits(Force, Transform, {\n  transform: function transform(_, pulse) {\n    var sim = this.value,\n      change = pulse.changed(pulse.ADD_REM),\n      params = _.modified(ForceParams),\n      iters = _.iterations || 300; // configure simulation\n\n    if (!sim) {\n      this.value = sim = simulation(pulse.source, _);\n      sim.on('tick', rerun(pulse.dataflow, this));\n      if (!_.static) {\n        change = true;\n        sim.tick(); // ensure we run on init\n      }\n\n      pulse.modifies('index');\n    } else {\n      if (change) {\n        pulse.modifies('index');\n        sim.nodes(pulse.source);\n      }\n      if (params || pulse.changed(pulse.MOD)) {\n        setup(sim, _, 0, pulse);\n      }\n    } // run simulation\n\n    if (params || change || _.modified(ForceConfig) || pulse.changed() && _.restart) {\n      sim.alpha(Math.max(sim.alpha(), _.alpha || 1)).alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));\n      if (_.static) {\n        for (sim.stop(); --iters >= 0;) {\n          sim.tick();\n        }\n      } else {\n        if (sim.stopped()) sim.restart();\n        if (!change) return pulse.StopPropagation; // defer to sim ticks\n      }\n    }\n\n    return this.finish(_, pulse);\n  },\n  finish: function finish(_, pulse) {\n    var dataflow = pulse.dataflow; // inspect dependencies, touch link source data\n\n    for (var args = this._argops, j = 0, m = args.length, arg; j < m; ++j) {\n      arg = args[j];\n      if (arg.name !== Forces || arg.op._argval.force !== 'link') {\n        continue;\n      }\n      for (var ops = arg.op._argops, i = 0, n = ops.length, op; i < n; ++i) {\n        if (ops[i].name === 'links' && (op = ops[i].op.source)) {\n          dataflow.pulse(op, dataflow.changeset().reflow());\n          break;\n        }\n      }\n    } // reflow all nodes\n\n    return pulse.reflow(_.modified()).modifies(ForceOutput);\n  }\n});\nfunction rerun(df, op) {\n  return function () {\n    return df.touch(op).run();\n  };\n}\nfunction simulation(nodes, _) {\n  var sim = forceSimulation(nodes),\n    stop = sim.stop,\n    restart = sim.restart;\n  var stopped = false;\n  sim.stopped = function () {\n    return stopped;\n  };\n  sim.restart = function () {\n    return stopped = false, restart();\n  };\n  sim.stop = function () {\n    return stopped = true, stop();\n  };\n  return setup(sim, _, true).on('end', function () {\n    return stopped = true;\n  });\n}\nfunction setup(sim, _, init, pulse) {\n  var f = array(_.forces),\n    i,\n    n,\n    p,\n    name;\n  for (i = 0, n = ForceParams.length; i < n; ++i) {\n    p = ForceParams[i];\n    if (p !== Forces && _.modified(p)) sim[p](_[p]);\n  }\n  for (i = 0, n = f.length; i < n; ++i) {\n    name = Forces + i;\n    p = init || _.modified(Forces, i) ? getForce(f[i]) : pulse && modified(f[i], pulse) ? sim.force(name) : null;\n    if (p) sim.force(name, p);\n  }\n  for (n = sim.numForces || 0; i < n; ++i) {\n    sim.force(Forces + i, null); // remove\n  }\n\n  sim.numForces = f.length;\n  return sim;\n}\nfunction modified(f, pulse) {\n  var k, v;\n  for (k in f) {\n    if (isFunction(v = f[k]) && pulse.modified(accessorFields(v))) return 1;\n  }\n  return 0;\n}\nfunction getForce(_) {\n  var f, p;\n  if (!hasOwnProperty(ForceMap, _.force)) {\n    error('Unrecognized force: ' + _.force);\n  }\n  f = ForceMap[_.force]();\n  for (p in _) {\n    if (isFunction(f[p])) setForceParam(f[p], _[p], _);\n  }\n  return f;\n}\nfunction setForceParam(f, v, _) {\n  f(isFunction(v) ? function (d) {\n    return v(d, _);\n  } : v);\n}\nexport { Force as force };","map":{"version":3,"names":["Transform","inherits","array","isFunction","accessorFields","hasOwnProperty","error","forceSimulation","forceCenter","forceCollide","forceManyBody","forceLink","forceX","forceY","ForceMap","center","collide","nbody","link","x","y","Forces","ForceParams","ForceConfig","ForceOutput","Force","params","call","Definition","transform","_","pulse","sim","value","change","changed","ADD_REM","modified","iters","iterations","simulation","source","on","rerun","dataflow","static","tick","modifies","nodes","MOD","setup","restart","alpha","Math","max","alphaDecay","pow","alphaMin","stop","stopped","StopPropagation","finish","args","_argops","j","m","length","arg","name","op","_argval","force","ops","i","n","changeset","reflow","df","touch","run","init","f","forces","p","getForce","numForces","k","v","setForceParam","d"],"sources":["/Users/weihangzhang/Documents/webpage/gosling-react/node_modules/vega-force/build/vega-force.module.js"],"sourcesContent":["import { Transform } from 'vega-dataflow';\nimport { inherits, array, isFunction, accessorFields, hasOwnProperty, error } from 'vega-util';\nimport { forceSimulation, forceCenter, forceCollide, forceManyBody, forceLink, forceX, forceY } from 'd3-force';\n\nconst ForceMap = {\n  center: forceCenter,\n  collide: forceCollide,\n  nbody: forceManyBody,\n  link: forceLink,\n  x: forceX,\n  y: forceY\n};\nconst Forces = 'forces',\n      ForceParams = ['alpha', 'alphaMin', 'alphaTarget', 'velocityDecay', 'forces'],\n      ForceConfig = ['static', 'iterations'],\n      ForceOutput = ['x', 'y', 'vx', 'vy'];\n/**\n * Force simulation layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<object>} params.forces - The forces to apply.\n */\n\nfunction Force(params) {\n  Transform.call(this, null, params);\n}\nForce.Definition = {\n  'type': 'Force',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'static',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'restart',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'iterations',\n    'type': 'number',\n    'default': 300\n  }, {\n    'name': 'alpha',\n    'type': 'number',\n    'default': 1\n  }, {\n    'name': 'alphaMin',\n    'type': 'number',\n    'default': 0.001\n  }, {\n    'name': 'alphaTarget',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'velocityDecay',\n    'type': 'number',\n    'default': 0.4\n  }, {\n    'name': 'forces',\n    'type': 'param',\n    'array': true,\n    'params': [{\n      'key': {\n        'force': 'center'\n      },\n      'params': [{\n        'name': 'x',\n        'type': 'number',\n        'default': 0\n      }, {\n        'name': 'y',\n        'type': 'number',\n        'default': 0\n      }]\n    }, {\n      'key': {\n        'force': 'collide'\n      },\n      'params': [{\n        'name': 'radius',\n        'type': 'number',\n        'expr': true\n      }, {\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.7\n      }, {\n        'name': 'iterations',\n        'type': 'number',\n        'default': 1\n      }]\n    }, {\n      'key': {\n        'force': 'nbody'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': -30\n      }, {\n        'name': 'theta',\n        'type': 'number',\n        'default': 0.9\n      }, {\n        'name': 'distanceMin',\n        'type': 'number',\n        'default': 1\n      }, {\n        'name': 'distanceMax',\n        'type': 'number'\n      }]\n    }, {\n      'key': {\n        'force': 'link'\n      },\n      'params': [{\n        'name': 'links',\n        'type': 'data'\n      }, {\n        'name': 'id',\n        'type': 'field'\n      }, {\n        'name': 'distance',\n        'type': 'number',\n        'default': 30,\n        'expr': true\n      }, {\n        'name': 'strength',\n        'type': 'number',\n        'expr': true\n      }, {\n        'name': 'iterations',\n        'type': 'number',\n        'default': 1\n      }]\n    }, {\n      'key': {\n        'force': 'x'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.1\n      }, {\n        'name': 'x',\n        'type': 'field'\n      }]\n    }, {\n      'key': {\n        'force': 'y'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.1\n      }, {\n        'name': 'y',\n        'type': 'field'\n      }]\n    }]\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'modify': false,\n    'default': ForceOutput\n  }]\n};\ninherits(Force, Transform, {\n  transform(_, pulse) {\n    var sim = this.value,\n        change = pulse.changed(pulse.ADD_REM),\n        params = _.modified(ForceParams),\n        iters = _.iterations || 300; // configure simulation\n\n\n    if (!sim) {\n      this.value = sim = simulation(pulse.source, _);\n      sim.on('tick', rerun(pulse.dataflow, this));\n\n      if (!_.static) {\n        change = true;\n        sim.tick(); // ensure we run on init\n      }\n\n      pulse.modifies('index');\n    } else {\n      if (change) {\n        pulse.modifies('index');\n        sim.nodes(pulse.source);\n      }\n\n      if (params || pulse.changed(pulse.MOD)) {\n        setup(sim, _, 0, pulse);\n      }\n    } // run simulation\n\n\n    if (params || change || _.modified(ForceConfig) || pulse.changed() && _.restart) {\n      sim.alpha(Math.max(sim.alpha(), _.alpha || 1)).alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));\n\n      if (_.static) {\n        for (sim.stop(); --iters >= 0;) sim.tick();\n      } else {\n        if (sim.stopped()) sim.restart();\n        if (!change) return pulse.StopPropagation; // defer to sim ticks\n      }\n    }\n\n    return this.finish(_, pulse);\n  },\n\n  finish(_, pulse) {\n    const dataflow = pulse.dataflow; // inspect dependencies, touch link source data\n\n    for (let args = this._argops, j = 0, m = args.length, arg; j < m; ++j) {\n      arg = args[j];\n\n      if (arg.name !== Forces || arg.op._argval.force !== 'link') {\n        continue;\n      }\n\n      for (var ops = arg.op._argops, i = 0, n = ops.length, op; i < n; ++i) {\n        if (ops[i].name === 'links' && (op = ops[i].op.source)) {\n          dataflow.pulse(op, dataflow.changeset().reflow());\n          break;\n        }\n      }\n    } // reflow all nodes\n\n\n    return pulse.reflow(_.modified()).modifies(ForceOutput);\n  }\n\n});\n\nfunction rerun(df, op) {\n  return () => df.touch(op).run();\n}\n\nfunction simulation(nodes, _) {\n  const sim = forceSimulation(nodes),\n        stop = sim.stop,\n        restart = sim.restart;\n  let stopped = false;\n\n  sim.stopped = () => stopped;\n\n  sim.restart = () => (stopped = false, restart());\n\n  sim.stop = () => (stopped = true, stop());\n\n  return setup(sim, _, true).on('end', () => stopped = true);\n}\n\nfunction setup(sim, _, init, pulse) {\n  var f = array(_.forces),\n      i,\n      n,\n      p,\n      name;\n\n  for (i = 0, n = ForceParams.length; i < n; ++i) {\n    p = ForceParams[i];\n    if (p !== Forces && _.modified(p)) sim[p](_[p]);\n  }\n\n  for (i = 0, n = f.length; i < n; ++i) {\n    name = Forces + i;\n    p = init || _.modified(Forces, i) ? getForce(f[i]) : pulse && modified(f[i], pulse) ? sim.force(name) : null;\n    if (p) sim.force(name, p);\n  }\n\n  for (n = sim.numForces || 0; i < n; ++i) {\n    sim.force(Forces + i, null); // remove\n  }\n\n  sim.numForces = f.length;\n  return sim;\n}\n\nfunction modified(f, pulse) {\n  var k, v;\n\n  for (k in f) {\n    if (isFunction(v = f[k]) && pulse.modified(accessorFields(v))) return 1;\n  }\n\n  return 0;\n}\n\nfunction getForce(_) {\n  var f, p;\n\n  if (!hasOwnProperty(ForceMap, _.force)) {\n    error('Unrecognized force: ' + _.force);\n  }\n\n  f = ForceMap[_.force]();\n\n  for (p in _) {\n    if (isFunction(f[p])) setForceParam(f[p], _[p], _);\n  }\n\n  return f;\n}\n\nfunction setForceParam(f, v, _) {\n  f(isFunction(v) ? d => v(d, _) : v);\n}\n\nexport { Force as force };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,UAAU,EAAEC,cAAc,EAAEC,cAAc,EAAEC,KAAK,QAAQ,WAAW;AAC9F,SAASC,eAAe,EAAEC,WAAW,EAAEC,YAAY,EAAEC,aAAa,EAAEC,SAAS,EAAEC,MAAM,EAAEC,MAAM,QAAQ,UAAU;AAE/G,IAAMC,QAAQ,GAAG;EACfC,MAAM,EAAEP,WAAW;EACnBQ,OAAO,EAAEP,YAAY;EACrBQ,KAAK,EAAEP,aAAa;EACpBQ,IAAI,EAAEP,SAAS;EACfQ,CAAC,EAAEP,MAAM;EACTQ,CAAC,EAAEP;AACL,CAAC;AACD,IAAMQ,MAAM,GAAG,QAAQ;EACjBC,WAAW,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,eAAe,EAAE,QAAQ,CAAC;EAC7EC,WAAW,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC;EACtCC,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAK,CAACC,MAAM,EAAE;EACrB1B,SAAS,CAAC2B,IAAI,CAAC,IAAI,EAAE,IAAI,EAAED,MAAM,CAAC;AACpC;AACAD,KAAK,CAACG,UAAU,GAAG;EACjB,MAAM,EAAE,OAAO;EACf,UAAU,EAAE;IACV,UAAU,EAAE;EACd,CAAC;EACD,QAAQ,EAAE,CAAC;IACT,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE;EACb,CAAC,EAAE;IACD,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE;EACb,CAAC,EAAE;IACD,MAAM,EAAE,YAAY;IACpB,MAAM,EAAE,QAAQ;IAChB,SAAS,EAAE;EACb,CAAC,EAAE;IACD,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,QAAQ;IAChB,SAAS,EAAE;EACb,CAAC,EAAE;IACD,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,QAAQ;IAChB,SAAS,EAAE;EACb,CAAC,EAAE;IACD,MAAM,EAAE,aAAa;IACrB,MAAM,EAAE,QAAQ;IAChB,SAAS,EAAE;EACb,CAAC,EAAE;IACD,MAAM,EAAE,eAAe;IACvB,MAAM,EAAE,QAAQ;IAChB,SAAS,EAAE;EACb,CAAC,EAAE;IACD,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,OAAO;IACf,OAAO,EAAE,IAAI;IACb,QAAQ,EAAE,CAAC;MACT,KAAK,EAAE;QACL,OAAO,EAAE;MACX,CAAC;MACD,QAAQ,EAAE,CAAC;QACT,MAAM,EAAE,GAAG;QACX,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;MACb,CAAC,EAAE;QACD,MAAM,EAAE,GAAG;QACX,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;MACb,CAAC;IACH,CAAC,EAAE;MACD,KAAK,EAAE;QACL,OAAO,EAAE;MACX,CAAC;MACD,QAAQ,EAAE,CAAC;QACT,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE;MACV,CAAC,EAAE;QACD,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;MACb,CAAC,EAAE;QACD,MAAM,EAAE,YAAY;QACpB,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;MACb,CAAC;IACH,CAAC,EAAE;MACD,KAAK,EAAE;QACL,OAAO,EAAE;MACX,CAAC;MACD,QAAQ,EAAE,CAAC;QACT,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE,CAAC;MACd,CAAC,EAAE;QACD,MAAM,EAAE,OAAO;QACf,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;MACb,CAAC,EAAE;QACD,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;MACb,CAAC,EAAE;QACD,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE;MACV,CAAC;IACH,CAAC,EAAE;MACD,KAAK,EAAE;QACL,OAAO,EAAE;MACX,CAAC;MACD,QAAQ,EAAE,CAAC;QACT,MAAM,EAAE,OAAO;QACf,MAAM,EAAE;MACV,CAAC,EAAE;QACD,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE;MACV,CAAC,EAAE;QACD,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE,EAAE;QACb,MAAM,EAAE;MACV,CAAC,EAAE;QACD,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE;MACV,CAAC,EAAE;QACD,MAAM,EAAE,YAAY;QACpB,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;MACb,CAAC;IACH,CAAC,EAAE;MACD,KAAK,EAAE;QACL,OAAO,EAAE;MACX,CAAC;MACD,QAAQ,EAAE,CAAC;QACT,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;MACb,CAAC,EAAE;QACD,MAAM,EAAE,GAAG;QACX,MAAM,EAAE;MACV,CAAC;IACH,CAAC,EAAE;MACD,KAAK,EAAE;QACL,OAAO,EAAE;MACX,CAAC;MACD,QAAQ,EAAE,CAAC;QACT,MAAM,EAAE,UAAU;QAClB,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE;MACb,CAAC,EAAE;QACD,MAAM,EAAE,GAAG;QACX,MAAM,EAAE;MACV,CAAC;IACH,CAAC;EACH,CAAC,EAAE;IACD,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,QAAQ;IAChB,OAAO,EAAE,IAAI;IACb,QAAQ,EAAE,KAAK;IACf,SAAS,EAAEJ;EACb,CAAC;AACH,CAAC;AACDvB,QAAQ,CAACwB,KAAK,EAAEzB,SAAS,EAAE;EACzB6B,SAAS,qBAACC,CAAC,EAAEC,KAAK,EAAE;IAClB,IAAIC,GAAG,GAAG,IAAI,CAACC,KAAK;MAChBC,MAAM,GAAGH,KAAK,CAACI,OAAO,CAACJ,KAAK,CAACK,OAAO,CAAC;MACrCV,MAAM,GAAGI,CAAC,CAACO,QAAQ,CAACf,WAAW,CAAC;MAChCgB,KAAK,GAAGR,CAAC,CAACS,UAAU,IAAI,GAAG,CAAC,CAAC;;IAGjC,IAAI,CAACP,GAAG,EAAE;MACR,IAAI,CAACC,KAAK,GAAGD,GAAG,GAAGQ,UAAU,CAACT,KAAK,CAACU,MAAM,EAAEX,CAAC,CAAC;MAC9CE,GAAG,CAACU,EAAE,CAAC,MAAM,EAAEC,KAAK,CAACZ,KAAK,CAACa,QAAQ,EAAE,IAAI,CAAC,CAAC;MAE3C,IAAI,CAACd,CAAC,CAACe,MAAM,EAAE;QACbX,MAAM,GAAG,IAAI;QACbF,GAAG,CAACc,IAAI,EAAE,CAAC,CAAC;MACd;;MAEAf,KAAK,CAACgB,QAAQ,CAAC,OAAO,CAAC;IACzB,CAAC,MAAM;MACL,IAAIb,MAAM,EAAE;QACVH,KAAK,CAACgB,QAAQ,CAAC,OAAO,CAAC;QACvBf,GAAG,CAACgB,KAAK,CAACjB,KAAK,CAACU,MAAM,CAAC;MACzB;MAEA,IAAIf,MAAM,IAAIK,KAAK,CAACI,OAAO,CAACJ,KAAK,CAACkB,GAAG,CAAC,EAAE;QACtCC,KAAK,CAAClB,GAAG,EAAEF,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC;MACzB;IACF,CAAC,CAAC;;IAGF,IAAIL,MAAM,IAAIQ,MAAM,IAAIJ,CAAC,CAACO,QAAQ,CAACd,WAAW,CAAC,IAAIQ,KAAK,CAACI,OAAO,EAAE,IAAIL,CAAC,CAACqB,OAAO,EAAE;MAC/EnB,GAAG,CAACoB,KAAK,CAACC,IAAI,CAACC,GAAG,CAACtB,GAAG,CAACoB,KAAK,EAAE,EAAEtB,CAAC,CAACsB,KAAK,IAAI,CAAC,CAAC,CAAC,CAACG,UAAU,CAAC,CAAC,GAAGF,IAAI,CAACG,GAAG,CAACxB,GAAG,CAACyB,QAAQ,EAAE,EAAE,CAAC,GAAGnB,KAAK,CAAC,CAAC;MAElG,IAAIR,CAAC,CAACe,MAAM,EAAE;QACZ,KAAKb,GAAG,CAAC0B,IAAI,EAAE,EAAE,EAAEpB,KAAK,IAAI,CAAC;UAAGN,GAAG,CAACc,IAAI,EAAE;QAAC;MAC7C,CAAC,MAAM;QACL,IAAId,GAAG,CAAC2B,OAAO,EAAE,EAAE3B,GAAG,CAACmB,OAAO,EAAE;QAChC,IAAI,CAACjB,MAAM,EAAE,OAAOH,KAAK,CAAC6B,eAAe,CAAC,CAAC;MAC7C;IACF;;IAEA,OAAO,IAAI,CAACC,MAAM,CAAC/B,CAAC,EAAEC,KAAK,CAAC;EAC9B,CAAC;EAED8B,MAAM,kBAAC/B,CAAC,EAAEC,KAAK,EAAE;IACf,IAAMa,QAAQ,GAAGb,KAAK,CAACa,QAAQ,CAAC,CAAC;;IAEjC,KAAK,IAAIkB,IAAI,GAAG,IAAI,CAACC,OAAO,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAEC,GAAG,EAAEH,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;MACrEG,GAAG,GAAGL,IAAI,CAACE,CAAC,CAAC;MAEb,IAAIG,GAAG,CAACC,IAAI,KAAK/C,MAAM,IAAI8C,GAAG,CAACE,EAAE,CAACC,OAAO,CAACC,KAAK,KAAK,MAAM,EAAE;QAC1D;MACF;MAEA,KAAK,IAAIC,GAAG,GAAGL,GAAG,CAACE,EAAE,CAACN,OAAO,EAAEU,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGF,GAAG,CAACN,MAAM,EAAEG,EAAE,EAAEI,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;QACpE,IAAID,GAAG,CAACC,CAAC,CAAC,CAACL,IAAI,KAAK,OAAO,KAAKC,EAAE,GAAGG,GAAG,CAACC,CAAC,CAAC,CAACJ,EAAE,CAAC5B,MAAM,CAAC,EAAE;UACtDG,QAAQ,CAACb,KAAK,CAACsC,EAAE,EAAEzB,QAAQ,CAAC+B,SAAS,EAAE,CAACC,MAAM,EAAE,CAAC;UACjD;QACF;MACF;IACF,CAAC,CAAC;;IAGF,OAAO7C,KAAK,CAAC6C,MAAM,CAAC9C,CAAC,CAACO,QAAQ,EAAE,CAAC,CAACU,QAAQ,CAACvB,WAAW,CAAC;EACzD;AAEF,CAAC,CAAC;AAEF,SAASmB,KAAK,CAACkC,EAAE,EAAER,EAAE,EAAE;EACrB,OAAO;IAAA,OAAMQ,EAAE,CAACC,KAAK,CAACT,EAAE,CAAC,CAACU,GAAG,EAAE;EAAA;AACjC;AAEA,SAASvC,UAAU,CAACQ,KAAK,EAAElB,CAAC,EAAE;EAC5B,IAAME,GAAG,GAAGzB,eAAe,CAACyC,KAAK,CAAC;IAC5BU,IAAI,GAAG1B,GAAG,CAAC0B,IAAI;IACfP,OAAO,GAAGnB,GAAG,CAACmB,OAAO;EAC3B,IAAIQ,OAAO,GAAG,KAAK;EAEnB3B,GAAG,CAAC2B,OAAO,GAAG;IAAA,OAAMA,OAAO;EAAA;EAE3B3B,GAAG,CAACmB,OAAO,GAAG;IAAA,OAAOQ,OAAO,GAAG,KAAK,EAAER,OAAO,EAAE;EAAA,CAAC;EAEhDnB,GAAG,CAAC0B,IAAI,GAAG;IAAA,OAAOC,OAAO,GAAG,IAAI,EAAED,IAAI,EAAE;EAAA,CAAC;EAEzC,OAAOR,KAAK,CAAClB,GAAG,EAAEF,CAAC,EAAE,IAAI,CAAC,CAACY,EAAE,CAAC,KAAK,EAAE;IAAA,OAAMiB,OAAO,GAAG,IAAI;EAAA,EAAC;AAC5D;AAEA,SAAST,KAAK,CAAClB,GAAG,EAAEF,CAAC,EAAEkD,IAAI,EAAEjD,KAAK,EAAE;EAClC,IAAIkD,CAAC,GAAG/E,KAAK,CAAC4B,CAAC,CAACoD,MAAM,CAAC;IACnBT,CAAC;IACDC,CAAC;IACDS,CAAC;IACDf,IAAI;EAER,KAAKK,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGpD,WAAW,CAAC4C,MAAM,EAAEO,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;IAC9CU,CAAC,GAAG7D,WAAW,CAACmD,CAAC,CAAC;IAClB,IAAIU,CAAC,KAAK9D,MAAM,IAAIS,CAAC,CAACO,QAAQ,CAAC8C,CAAC,CAAC,EAAEnD,GAAG,CAACmD,CAAC,CAAC,CAACrD,CAAC,CAACqD,CAAC,CAAC,CAAC;EACjD;EAEA,KAAKV,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGO,CAAC,CAACf,MAAM,EAAEO,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;IACpCL,IAAI,GAAG/C,MAAM,GAAGoD,CAAC;IACjBU,CAAC,GAAGH,IAAI,IAAIlD,CAAC,CAACO,QAAQ,CAAChB,MAAM,EAAEoD,CAAC,CAAC,GAAGW,QAAQ,CAACH,CAAC,CAACR,CAAC,CAAC,CAAC,GAAG1C,KAAK,IAAIM,QAAQ,CAAC4C,CAAC,CAACR,CAAC,CAAC,EAAE1C,KAAK,CAAC,GAAGC,GAAG,CAACuC,KAAK,CAACH,IAAI,CAAC,GAAG,IAAI;IAC5G,IAAIe,CAAC,EAAEnD,GAAG,CAACuC,KAAK,CAACH,IAAI,EAAEe,CAAC,CAAC;EAC3B;EAEA,KAAKT,CAAC,GAAG1C,GAAG,CAACqD,SAAS,IAAI,CAAC,EAAEZ,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;IACvCzC,GAAG,CAACuC,KAAK,CAAClD,MAAM,GAAGoD,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EAC/B;;EAEAzC,GAAG,CAACqD,SAAS,GAAGJ,CAAC,CAACf,MAAM;EACxB,OAAOlC,GAAG;AACZ;AAEA,SAASK,QAAQ,CAAC4C,CAAC,EAAElD,KAAK,EAAE;EAC1B,IAAIuD,CAAC,EAAEC,CAAC;EAER,KAAKD,CAAC,IAAIL,CAAC,EAAE;IACX,IAAI9E,UAAU,CAACoF,CAAC,GAAGN,CAAC,CAACK,CAAC,CAAC,CAAC,IAAIvD,KAAK,CAACM,QAAQ,CAACjC,cAAc,CAACmF,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;EACzE;EAEA,OAAO,CAAC;AACV;AAEA,SAASH,QAAQ,CAACtD,CAAC,EAAE;EACnB,IAAImD,CAAC,EAAEE,CAAC;EAER,IAAI,CAAC9E,cAAc,CAACS,QAAQ,EAAEgB,CAAC,CAACyC,KAAK,CAAC,EAAE;IACtCjE,KAAK,CAAC,sBAAsB,GAAGwB,CAAC,CAACyC,KAAK,CAAC;EACzC;EAEAU,CAAC,GAAGnE,QAAQ,CAACgB,CAAC,CAACyC,KAAK,CAAC,EAAE;EAEvB,KAAKY,CAAC,IAAIrD,CAAC,EAAE;IACX,IAAI3B,UAAU,CAAC8E,CAAC,CAACE,CAAC,CAAC,CAAC,EAAEK,aAAa,CAACP,CAAC,CAACE,CAAC,CAAC,EAAErD,CAAC,CAACqD,CAAC,CAAC,EAAErD,CAAC,CAAC;EACpD;EAEA,OAAOmD,CAAC;AACV;AAEA,SAASO,aAAa,CAACP,CAAC,EAAEM,CAAC,EAAEzD,CAAC,EAAE;EAC9BmD,CAAC,CAAC9E,UAAU,CAACoF,CAAC,CAAC,GAAG,UAAAE,CAAC;IAAA,OAAIF,CAAC,CAACE,CAAC,EAAE3D,CAAC,CAAC;EAAA,IAAGyD,CAAC,CAAC;AACrC;AAEA,SAAS9D,KAAK,IAAI8C,KAAK"},"metadata":{},"sourceType":"module"}