{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/weihangzhang/Documents/webpage/visualization-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { getSizeChannel, POSITION_SCALE_CHANNELS } from '../../channel';\nimport { isContinuousFieldOrDatumDef } from '../../channeldef';\nimport * as log from '../../log';\nimport { isStep } from '../../spec/base';\nexport function initLayoutSize(_ref) {\n  var encoding = _ref.encoding,\n    size = _ref.size;\n  var _iterator = _createForOfIteratorHelper(POSITION_SCALE_CHANNELS),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var channel = _step.value;\n      var sizeType = getSizeChannel(channel);\n      if (isStep(size[sizeType])) {\n        if (isContinuousFieldOrDatumDef(encoding[channel])) {\n          delete size[sizeType];\n          log.warn(log.message.stepDropped(sizeType));\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return size;\n}","map":{"version":3,"sources":["../../../../src/compile/layoutsize/init.ts"],"names":[],"mappings":";AAAA,SAAQ,cAAc,EAAE,uBAAuB,QAAO,eAAe;AACrE,SAAQ,2BAA2B,QAAO,kBAAkB;AAE5D,OAAO,KAAK,GAAG,MAAM,WAAW;AAChC,SAAQ,MAAM,QAAyB,iBAAiB;AAExD,OAAM,SAAU,cAAc,OAAuE;EAAA,IAArE,QAAQ,QAAR,QAAQ;IAAE,IAAI,QAAJ,IAAI;EAAA,2CACtB,uBAAuB;IAAA;EAAA;IAA7C,oDAA+C;MAAA,IAApC,OAAO;MAChB,IAAM,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC;MACxC,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;QAC1B,IAAI,2BAA2B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE;UAClD,OAAO,IAAI,CAAC,QAAQ,CAAC;UACrB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC5C;MACF;;EACF;IAAA;EAAA;IAAA;EAAA;EAED,OAAO,IAAI;AACb","sourceRoot":"","sourcesContent":["import { getSizeChannel, POSITION_SCALE_CHANNELS } from '../../channel';\nimport { isContinuousFieldOrDatumDef } from '../../channeldef';\nimport * as log from '../../log';\nimport { isStep } from '../../spec/base';\nexport function initLayoutSize({ encoding, size }) {\n    for (const channel of POSITION_SCALE_CHANNELS) {\n        const sizeType = getSizeChannel(channel);\n        if (isStep(size[sizeType])) {\n            if (isContinuousFieldOrDatumDef(encoding[channel])) {\n                delete size[sizeType];\n                log.warn(log.message.stepDropped(sizeType));\n            }\n        }\n    }\n    return size;\n}\n//# sourceMappingURL=init.js.map"]},"metadata":{},"sourceType":"module"}