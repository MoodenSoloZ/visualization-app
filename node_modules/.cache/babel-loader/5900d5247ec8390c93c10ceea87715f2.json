{"ast":null,"code":"import { keys } from '../util';\nimport { CompositeMarkNormalizer } from './base';\nimport { BOXPLOT, BOXPLOT_PARTS, normalizeBoxPlot } from './boxplot';\nimport { ERRORBAND, ERRORBAND_PARTS, normalizeErrorBand } from './errorband';\nimport { ERRORBAR, ERRORBAR_PARTS, normalizeErrorBar } from './errorbar';\n/**\n * Registry index for all composite mark's normalizer\n */\nvar compositeMarkRegistry = {};\nexport function add(mark, run, parts) {\n  var normalizer = new CompositeMarkNormalizer(mark, run);\n  compositeMarkRegistry[mark] = {\n    normalizer: normalizer,\n    parts: parts\n  };\n}\nexport function remove(mark) {\n  delete compositeMarkRegistry[mark];\n}\nexport function getAllCompositeMarks() {\n  return keys(compositeMarkRegistry);\n}\nadd(BOXPLOT, normalizeBoxPlot, BOXPLOT_PARTS);\nadd(ERRORBAR, normalizeErrorBar, ERRORBAR_PARTS);\nadd(ERRORBAND, normalizeErrorBand, ERRORBAND_PARTS);","map":{"version":3,"sources":["../../../src/compositemark/index.ts"],"names":[],"mappings":"AAMA,SAAQ,IAAI,QAAO,SAAS;AAC5B,SAAQ,uBAAuB,QAAO,QAAQ;AAC9C,SAAQ,OAAO,EAA4C,aAAa,EAAE,gBAAgB,QAAO,WAAW;AAC5G,SACE,SAAS,EAIT,eAAe,EACf,kBAAkB,QACb,aAAa;AACpB,SACE,QAAQ,EAIR,cAAc,EAEd,iBAAiB,QACZ,YAAY;AAWnB;;AAEG;AACH,IAAM,qBAAqB,GAKvB,CAAA,CAAE;AAEN,OAAM,SAAU,GAAG,CAAC,IAAY,EAAE,GAA+B,EAAE,KAAwB,EAAA;EACzF,IAAM,UAAU,GAAG,IAAI,uBAAuB,CAAC,IAAI,EAAE,GAAG,CAAC;EACzD,qBAAqB,CAAC,IAAI,CAAC,GAAG;IAAC,UAAU,EAAV,UAAU;IAAE,KAAK,EAAL;EAAK,CAAC;AACnD;AAEA,OAAM,SAAU,MAAM,CAAC,IAAY,EAAA;EACjC,OAAO,qBAAqB,CAAC,IAAI,CAAC;AACpC;AAiBA,OAAM,SAAU,oBAAoB,GAAA;EAClC,OAAO,IAAI,CAAC,qBAAqB,CAAC;AACpC;AAQA,GAAG,CAAC,OAAO,EAAE,gBAAgB,EAAE,aAAa,CAAC;AAC7C,GAAG,CAAC,QAAQ,EAAE,iBAAiB,EAAE,cAAc,CAAC;AAChD,GAAG,CAAC,SAAS,EAAE,kBAAkB,EAAE,eAAe,CAAC","sourceRoot":"","sourcesContent":["import { keys } from '../util';\nimport { CompositeMarkNormalizer } from './base';\nimport { BOXPLOT, BOXPLOT_PARTS, normalizeBoxPlot } from './boxplot';\nimport { ERRORBAND, ERRORBAND_PARTS, normalizeErrorBand } from './errorband';\nimport { ERRORBAR, ERRORBAR_PARTS, normalizeErrorBar } from './errorbar';\n/**\n * Registry index for all composite mark's normalizer\n */\nconst compositeMarkRegistry = {};\nexport function add(mark, run, parts) {\n    const normalizer = new CompositeMarkNormalizer(mark, run);\n    compositeMarkRegistry[mark] = { normalizer, parts };\n}\nexport function remove(mark) {\n    delete compositeMarkRegistry[mark];\n}\nexport function getAllCompositeMarks() {\n    return keys(compositeMarkRegistry);\n}\nadd(BOXPLOT, normalizeBoxPlot, BOXPLOT_PARTS);\nadd(ERRORBAR, normalizeErrorBar, ERRORBAR_PARTS);\nadd(ERRORBAND, normalizeErrorBand, ERRORBAND_PARTS);\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}